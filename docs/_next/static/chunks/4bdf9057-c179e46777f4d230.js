"use strict";(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[444],{2248:function(a,b,c){c.d(b,{AL:function(){return aa},CD:function(){return I},Dd:function(){return aE},H5:function(){return M},JL:function(){return ac},M4:function(){return aD},Uy:function(){return aB},YQ:function(){return h},at:function(){return $},gh:function(){return R},ol:function(){return ab},"p$":function(){return ax},rk:function(){return Z},wL:function(){return aC},xC:function(){return S},xV:function(){return aw},xs:function(){return J},zo:function(){return _}});var d=c(9477),e="varying vec2 vUv;void main(){vUv=position.xy*0.5+0.5;gl_Position=vec4(position.xy,1.0,1.0);}",f=class extends d.ShaderMaterial{constructor(){super({name:"AdaptiveLuminanceMaterial",defines:{THREE_REVISION:d.REVISION.replace(/\D+/g,""),MIP_LEVEL_1X1:"0.0"},uniforms:{luminanceBuffer0:new d.Uniform(null),luminanceBuffer1:new d.Uniform(null),minLuminance:new d.Uniform(.01),deltaTime:new d.Uniform(0),tau:new d.Uniform(1)},extensions:{shaderTextureLOD:!0},blending:d.NoBlending,depthWrite:!1,depthTest:!1,fragmentShader:"#include <packing>\n#define packFloatToRGBA(v) packDepthToRGBA(v)\n#define unpackRGBAToFloat(v) unpackRGBAToDepth(v)\nuniform lowp sampler2D luminanceBuffer0;uniform lowp sampler2D luminanceBuffer1;uniform float minLuminance;uniform float deltaTime;uniform float tau;varying vec2 vUv;void main(){float l0=unpackRGBAToFloat(texture2D(luminanceBuffer0,vUv));\n#if __VERSION__ < 300\nfloat l1=texture2DLodEXT(luminanceBuffer1,vUv,MIP_LEVEL_1X1).r;\n#else\nfloat l1=textureLod(luminanceBuffer1,vUv,MIP_LEVEL_1X1).r;\n#endif\nl0=max(minLuminance,l0);l1=max(minLuminance,l1);float adaptedLum=l0+(l1-l0)*(1.0-exp(-deltaTime*tau));gl_FragColor=(adaptedLum==1.0)?vec4(1.0):packFloatToRGBA(adaptedLum);}",vertexShader:e}),this.toneMapped=!1}set luminanceBuffer0(a){this.uniforms.luminanceBuffer0.value=a}setLuminanceBuffer0(a){this.uniforms.luminanceBuffer0.value=a}set luminanceBuffer1(a){this.uniforms.luminanceBuffer1.value=a}setLuminanceBuffer1(a){this.uniforms.luminanceBuffer1.value=a}set mipLevel1x1(a){this.defines.MIP_LEVEL_1X1=a.toFixed(1),this.needsUpdate=!0}setMipLevel1x1(a){this.mipLevel1x1=a}set deltaTime(a){this.uniforms.deltaTime.value=a}setDeltaTime(a){this.uniforms.deltaTime.value=a}get minLuminance(){return this.uniforms.minLuminance.value}set minLuminance(a){this.uniforms.minLuminance.value=a}getMinLuminance(){return this.uniforms.minLuminance.value}setMinLuminance(a){this.uniforms.minLuminance.value=a}get adaptationRate(){return this.uniforms.tau.value}set adaptationRate(a){this.uniforms.tau.value=a}getAdaptationRate(){return this.uniforms.tau.value}setAdaptationRate(a){this.uniforms.tau.value=a}};function g(a,b,c){return Math.min(Math.max((a+b)/(b-c),0),1)}var h={SKIP:9,SET:30,ADD:0,ALPHA:1,AVERAGE:2,COLOR:3,COLOR_BURN:4,COLOR_DODGE:5,DARKEN:6,DIFFERENCE:7,DIVIDE:8,DST:9,EXCLUSION:10,HARD_LIGHT:11,HARD_MIX:12,HUE:13,INVERT:14,INVERT_RGB:15,LIGHTEN:16,LINEAR_BURN:17,LINEAR_DODGE:18,LINEAR_LIGHT:19,LUMINOSITY:20,MULTIPLY:21,NEGATION:22,NORMAL:23,OVERLAY:24,PIN_LIGHT:25,REFLECT:26,SATURATION:27,SCREEN:28,SOFT_LIGHT:29,SRC:30,SUBTRACT:31,VIVID_LIGHT:32},i={DEFAULT:0,KEEP_MAX_DEPTH:1,DISCARD_MAX_DEPTH:2},j={NONE:0,DEPTH:1,CONVOLUTION:2},k={FRAGMENT_HEAD:"FRAGMENT_HEAD",FRAGMENT_MAIN_UV:"FRAGMENT_MAIN_UV",FRAGMENT_MAIN_IMAGE:"FRAGMENT_MAIN_IMAGE",VERTEX_HEAD:"VERTEX_HEAD",VERTEX_MAIN_SUPPORT:"VERTEX_MAIN_SUPPORT"},l={VERY_SMALL:0,SMALL:1,MEDIUM:2,LARGE:3,VERY_LARGE:4,HUGE:5},m={SCALE_UP:"lut.scaleup"},n={REINHARD:0,REINHARD2:1,REINHARD2_ADAPTIVE:2,OPTIMIZED_CINEON:3,ACES_FILMIC:4},o={DEFAULT:0,ESKIL:1},p=[new Float32Array([0,0]),new Float32Array([0,1,1]),new Float32Array([0,1,1,2]),new Float32Array([0,1,2,2,3]),new Float32Array([0,1,2,3,4,4,5]),new Float32Array([0,1,2,3,4,5,7,8,9,10])],q=class extends d.ShaderMaterial{constructor(a=new d.Vector4){super({name:"KawaseBlurMaterial",uniforms:{inputBuffer:new d.Uniform(null),texelSize:new d.Uniform(new d.Vector4),scale:new d.Uniform(1),kernel:new d.Uniform(0)},blending:d.NoBlending,depthWrite:!1,depthTest:!1,fragmentShader:"#ifdef FRAMEBUFFER_PRECISION_HIGH\nuniform mediump sampler2D inputBuffer;\n#else\nuniform lowp sampler2D inputBuffer;\n#endif\nvarying vec2 vUv0;varying vec2 vUv1;varying vec2 vUv2;varying vec2 vUv3;void main(){vec4 sum=texture2D(inputBuffer,vUv0);sum+=texture2D(inputBuffer,vUv1);sum+=texture2D(inputBuffer,vUv2);sum+=texture2D(inputBuffer,vUv3);gl_FragColor=sum*0.25;\n#include <encodings_fragment>\n}",vertexShader:"uniform vec4 texelSize;uniform float kernel;uniform float scale;varying vec2 vUv0;varying vec2 vUv1;varying vec2 vUv2;varying vec2 vUv3;void main(){vec2 uv=position.xy*0.5+0.5;vec2 dUv=(texelSize.xy*vec2(kernel)+texelSize.zw)*scale;vUv0=vec2(uv.x-dUv.x,uv.y+dUv.y);vUv1=vec2(uv.x+dUv.x,uv.y+dUv.y);vUv2=vec2(uv.x+dUv.x,uv.y-dUv.y);vUv3=vec2(uv.x-dUv.x,uv.y-dUv.y);gl_Position=vec4(position.xy,1.0,1.0);}"}),this.toneMapped=!1,this.setTexelSize(a.x,a.y),this.kernelSize=l.MEDIUM}set inputBuffer(a){this.uniforms.inputBuffer.value=a}setInputBuffer(a){this.inputBuffer=a}get kernelSequence(){return p[this.kernelSize]}get scale(){return this.uniforms.scale.value}set scale(a){this.uniforms.scale.value=a}getScale(){return this.uniforms.scale.value}setScale(a){this.uniforms.scale.value=a}getKernel(){return null}get kernel(){return this.uniforms.kernel.value}set kernel(a){this.uniforms.kernel.value=a}setKernel(a){this.kernel=a}setTexelSize(a,b){this.uniforms.texelSize.value.set(a,b,.5*a,.5*b)}setSize(a,b){let c=1/a,d=1/b;this.uniforms.texelSize.value.set(c,d,.5*c,.5*d)}},r=class extends d.ShaderMaterial{constructor(){super({name:"CopyMaterial",uniforms:{inputBuffer:new d.Uniform(null),opacity:new d.Uniform(1)},blending:d.NoBlending,depthWrite:!1,depthTest:!1,fragmentShader:"#include <common>\n#include <dithering_pars_fragment>\n#ifdef FRAMEBUFFER_PRECISION_HIGH\nuniform mediump sampler2D inputBuffer;\n#else\nuniform lowp sampler2D inputBuffer;\n#endif\nuniform float opacity;varying vec2 vUv;void main(){vec4 texel=texture2D(inputBuffer,vUv);gl_FragColor=opacity*texel;\n#include <encodings_fragment>\n#include <dithering_fragment>\n}",vertexShader:e}),this.toneMapped=!1}set inputBuffer(a){this.uniforms.inputBuffer.value=a}setInputBuffer(a){this.uniforms.inputBuffer.value=a}getOpacity(a){return this.uniforms.opacity.value}setOpacity(a){this.uniforms.opacity.value=a}},s=class extends d.ShaderMaterial{constructor(){super({name:"DepthDownsamplingMaterial",defines:{DEPTH_PACKING:"0"},uniforms:{depthBuffer:new d.Uniform(null),normalBuffer:new d.Uniform(null),texelSize:new d.Uniform(new d.Vector2)},blending:d.NoBlending,depthWrite:!1,depthTest:!1,fragmentShader:"#include <packing>\n#ifdef GL_FRAGMENT_PRECISION_HIGH\nuniform highp sampler2D depthBuffer;\n#else\nuniform mediump sampler2D depthBuffer;\n#endif\n#ifdef DOWNSAMPLE_NORMALS\nuniform lowp sampler2D normalBuffer;\n#endif\nvarying vec2 vUv0;varying vec2 vUv1;varying vec2 vUv2;varying vec2 vUv3;float readDepth(const in vec2 uv){\n#if DEPTH_PACKING == 3201\nreturn unpackRGBAToDepth(texture2D(depthBuffer,uv));\n#else\nreturn texture2D(depthBuffer,uv).r;\n#endif\n}int findBestDepth(const in float samples[4]){float c=(samples[0]+samples[1]+samples[2]+samples[3])/4.0;float distances[4];distances[0]=abs(c-samples[0]);distances[1]=abs(c-samples[1]);distances[2]=abs(c-samples[2]);distances[3]=abs(c-samples[3]);float maxDistance=max(max(distances[0],distances[1]),max(distances[2],distances[3]));int remaining[3];int rejected[3];int i,j,k;for(i=0,j=0,k=0;i<4;++i){if(distances[i]<maxDistance){remaining[j++]=i;}else{rejected[k++]=i;}}for(;j<3;++j){remaining[j]=rejected[--k];}vec3 s=vec3(samples[remaining[0]],samples[remaining[1]],samples[remaining[2]]);c=(s.x+s.y+s.z)/3.0;distances[0]=abs(c-s.x);distances[1]=abs(c-s.y);distances[2]=abs(c-s.z);float minDistance=min(distances[0],min(distances[1],distances[2]));for(i=0;i<3;++i){if(distances[i]==minDistance){break;}}return remaining[i];}void main(){float d[4];d[0]=readDepth(vUv0);d[1]=readDepth(vUv1);d[2]=readDepth(vUv2);d[3]=readDepth(vUv3);int index=findBestDepth(d);\n#ifdef DOWNSAMPLE_NORMALS\nvec2 uvs[4];uvs[0]=vUv0;uvs[1]=vUv1;uvs[2]=vUv2;uvs[3]=vUv3;vec3 n=texture2D(normalBuffer,uvs[index]).rgb;\n#else\nvec3 n=vec3(0.0);\n#endif\ngl_FragColor=vec4(n,d[index]);}",vertexShader:"uniform vec2 texelSize;varying vec2 vUv0;varying vec2 vUv1;varying vec2 vUv2;varying vec2 vUv3;void main(){vec2 uv=position.xy*0.5+0.5;vUv0=uv;vUv1=vec2(uv.x,uv.y+texelSize.y);vUv2=vec2(uv.x+texelSize.x,uv.y);vUv3=uv+texelSize;gl_Position=vec4(position.xy,1.0,1.0);}"}),this.toneMapped=!1}set depthBuffer(a){this.uniforms.depthBuffer.value=a}set depthPacking(a){this.defines.DEPTH_PACKING=a.toFixed(0),this.needsUpdate=!0}setDepthBuffer(a,b=d.BasicDepthPacking){this.depthBuffer=a,this.depthPacking=b}set normalBuffer(a){this.uniforms.normalBuffer.value=a,null!==a?this.defines.DOWNSAMPLE_NORMALS="1":delete this.defines.DOWNSAMPLE_NORMALS,this.needsUpdate=!0}setNormalBuffer(a){this.normalBuffer=a}setTexelSize(a,b){this.uniforms.texelSize.value.set(a,b)}setSize(a,b){this.uniforms.texelSize.value.set(1/a,1/b)}},t=class extends d.ShaderMaterial{constructor(){super({name:"DownsamplingMaterial",uniforms:{inputBuffer:new d.Uniform(null),texelSize:new d.Uniform(new d.Vector2)},blending:d.NoBlending,depthWrite:!1,depthTest:!1,fragmentShader:"#ifdef FRAMEBUFFER_PRECISION_HIGH\nuniform mediump sampler2D inputBuffer;\n#else\nuniform lowp sampler2D inputBuffer;\n#endif\n#define WEIGHT_INNER 0.125\n#define WEIGHT_OUTER 0.0555555\nvarying vec2 vUv;varying vec2 vUv00;varying vec2 vUv01;varying vec2 vUv02;varying vec2 vUv03;varying vec2 vUv04;varying vec2 vUv05;varying vec2 vUv06;varying vec2 vUv07;varying vec2 vUv08;varying vec2 vUv09;varying vec2 vUv10;varying vec2 vUv11;float clampToBorder(const in vec2 uv){return float(uv.s>=0.0&&uv.s<=1.0&&uv.t>=0.0&&uv.t<=1.0);}void main(){vec4 c=vec4(0.0);vec4 w=WEIGHT_INNER*vec4(clampToBorder(vUv00),clampToBorder(vUv01),clampToBorder(vUv02),clampToBorder(vUv03));c+=w.x*texture2D(inputBuffer,vUv00);c+=w.y*texture2D(inputBuffer,vUv01);c+=w.z*texture2D(inputBuffer,vUv02);c+=w.w*texture2D(inputBuffer,vUv03);w=WEIGHT_OUTER*vec4(clampToBorder(vUv04),clampToBorder(vUv05),clampToBorder(vUv06),clampToBorder(vUv07));c+=w.x*texture2D(inputBuffer,vUv04);c+=w.y*texture2D(inputBuffer,vUv05);c+=w.z*texture2D(inputBuffer,vUv06);c+=w.w*texture2D(inputBuffer,vUv07);w=WEIGHT_OUTER*vec4(clampToBorder(vUv08),clampToBorder(vUv09),clampToBorder(vUv10),clampToBorder(vUv11));c+=w.x*texture2D(inputBuffer,vUv08);c+=w.y*texture2D(inputBuffer,vUv09);c+=w.z*texture2D(inputBuffer,vUv10);c+=w.w*texture2D(inputBuffer,vUv11);c+=WEIGHT_OUTER*texture2D(inputBuffer,vUv);gl_FragColor=c;\n#include <encodings_fragment>\n}",vertexShader:"uniform vec2 texelSize;varying vec2 vUv;varying vec2 vUv00;varying vec2 vUv01;varying vec2 vUv02;varying vec2 vUv03;varying vec2 vUv04;varying vec2 vUv05;varying vec2 vUv06;varying vec2 vUv07;varying vec2 vUv08;varying vec2 vUv09;varying vec2 vUv10;varying vec2 vUv11;void main(){vUv=position.xy*0.5+0.5;vUv00=vUv+texelSize*vec2(-1.0,1.0);vUv01=vUv+texelSize*vec2(1.0,1.0);vUv02=vUv+texelSize*vec2(-1.0,-1.0);vUv03=vUv+texelSize*vec2(1.0,-1.0);vUv04=vUv+texelSize*vec2(-2.0,2.0);vUv05=vUv+texelSize*vec2(0.0,2.0);vUv06=vUv+texelSize*vec2(2.0,2.0);vUv07=vUv+texelSize*vec2(-2.0,0.0);vUv08=vUv+texelSize*vec2(2.0,0.0);vUv09=vUv+texelSize*vec2(-2.0,-2.0);vUv10=vUv+texelSize*vec2(0.0,-2.0);vUv11=vUv+texelSize*vec2(2.0,-2.0);gl_Position=vec4(position.xy,1.0,1.0);}"}),this.toneMapped=!1}set inputBuffer(a){this.uniforms.inputBuffer.value=a}setSize(a,b){this.uniforms.texelSize.value.set(1/a,1/b)}},u=class extends d.ShaderMaterial{constructor(a,b,c,e,f=!1){super({name:"EffectMaterial",defines:{THREE_REVISION:d.REVISION.replace(/\D+/g,""),DEPTH_PACKING:"0",ENCODE_OUTPUT:"1"},uniforms:{inputBuffer:new d.Uniform(null),depthBuffer:new d.Uniform(null),resolution:new d.Uniform(new d.Vector2),texelSize:new d.Uniform(new d.Vector2),cameraNear:new d.Uniform(.3),cameraFar:new d.Uniform(1e3),aspect:new d.Uniform(1),time:new d.Uniform(0)},blending:d.NoBlending,depthWrite:!1,depthTest:!1,dithering:f}),this.toneMapped=!1,a&&this.setShaderParts(a),b&&this.setDefines(b),c&&this.setUniforms(c),this.adoptCameraSettings(e)}set inputBuffer(a){this.uniforms.inputBuffer.value=a}setInputBuffer(a){this.uniforms.inputBuffer.value=a}get depthBuffer(){return this.uniforms.depthBuffer.value}set depthBuffer(a){this.uniforms.depthBuffer.value=a}get depthPacking(){return Number(this.defines.DEPTH_PACKING)}set depthPacking(a){this.defines.DEPTH_PACKING=a.toFixed(0),this.needsUpdate=!0}setDepthBuffer(a,b=d.BasicDepthPacking){this.depthBuffer=a,this.depthPacking=b}setShaderData(a){this.setShaderParts(a.shaderParts),this.setDefines(a.defines),this.setUniforms(a.uniforms),this.setExtensions(a.extensions)}setShaderParts(a){var b,c,d,e,f;return this.fragmentShader="#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#define packFloatToRGBA(v) packDepthToRGBA(v)\n#define unpackRGBAToFloat(v) unpackRGBAToDepth(v)\n#ifdef FRAMEBUFFER_PRECISION_HIGH\nuniform mediump sampler2D inputBuffer;\n#else\nuniform lowp sampler2D inputBuffer;\n#endif\n#ifdef GL_FRAGMENT_PRECISION_HIGH\nuniform highp sampler2D depthBuffer;\n#else\nuniform mediump sampler2D depthBuffer;\n#endif\nuniform vec2 resolution;uniform vec2 texelSize;uniform float cameraNear;uniform float cameraFar;uniform float aspect;uniform float time;varying vec2 vUv;\n#if THREE_REVISION < 143\n#define luminance(v) linearToRelativeLuminance(v)\n#endif\n#if THREE_REVISION >= 137\nvec4 sRGBToLinear(const in vec4 value){return vec4(mix(pow(value.rgb*0.9478672986+vec3(0.0521327014),vec3(2.4)),value.rgb*0.0773993808,vec3(lessThanEqual(value.rgb,vec3(0.04045)))),value.a);}\n#endif\nfloat readDepth(const in vec2 uv){\n#if DEPTH_PACKING == 3201\nreturn unpackRGBAToDepth(texture2D(depthBuffer,uv));\n#else\nreturn texture2D(depthBuffer,uv).r;\n#endif\n}float getViewZ(const in float depth){\n#ifdef PERSPECTIVE_CAMERA\nreturn perspectiveDepthToViewZ(depth,cameraNear,cameraFar);\n#else\nreturn orthographicDepthToViewZ(depth,cameraNear,cameraFar);\n#endif\n}vec3 RGBToHCV(const in vec3 RGB){vec4 P=mix(vec4(RGB.bg,-1.0,2.0/3.0),vec4(RGB.gb,0.0,-1.0/3.0),step(RGB.b,RGB.g));vec4 Q=mix(vec4(P.xyw,RGB.r),vec4(RGB.r,P.yzx),step(P.x,RGB.r));float C=Q.x-min(Q.w,Q.y);float H=abs((Q.w-Q.y)/(6.0*C+EPSILON)+Q.z);return vec3(H,C,Q.x);}vec3 RGBToHSL(const in vec3 RGB){vec3 HCV=RGBToHCV(RGB);float L=HCV.z-HCV.y*0.5;float S=HCV.y/(1.0-abs(L*2.0-1.0)+EPSILON);return vec3(HCV.x,S,L);}vec3 HueToRGB(const in float H){float R=abs(H*6.0-3.0)-1.0;float G=2.0-abs(H*6.0-2.0);float B=2.0-abs(H*6.0-4.0);return clamp(vec3(R,G,B),0.0,1.0);}vec3 HSLToRGB(const in vec3 HSL){vec3 RGB=HueToRGB(HSL.x);float C=(1.0-abs(2.0*HSL.z-1.0))*HSL.y;return(RGB-0.5)*C+HSL.z;}FRAGMENT_HEADvoid main(){FRAGMENT_MAIN_UVvec4 color0=texture2D(inputBuffer,UV);vec4 color1=vec4(0.0);FRAGMENT_MAIN_IMAGEgl_FragColor=color0;\n#ifdef ENCODE_OUTPUT\n#include <encodings_fragment>\n#endif\n#include <dithering_fragment>\n}".replace(k.FRAGMENT_HEAD,null!=(b=a.get(k.FRAGMENT_HEAD))?b:"").replace(k.FRAGMENT_MAIN_UV,null!=(c=a.get(k.FRAGMENT_MAIN_UV))?c:"").replace(k.FRAGMENT_MAIN_IMAGE,null!=(d=a.get(k.FRAGMENT_MAIN_IMAGE))?d:""),this.vertexShader="uniform vec2 resolution;uniform vec2 texelSize;uniform float cameraNear;uniform float cameraFar;uniform float aspect;uniform float time;varying vec2 vUv;VERTEX_HEADvoid main(){vUv=position.xy*0.5+0.5;VERTEX_MAIN_SUPPORTgl_Position=vec4(position.xy,1.0,1.0);}".replace(k.VERTEX_HEAD,null!=(e=a.get(k.VERTEX_HEAD))?e:"").replace(k.VERTEX_MAIN_SUPPORT,null!=(f=a.get(k.VERTEX_MAIN_SUPPORT))?f:""),this.needsUpdate=!0,this}setDefines(a){for(let b of a.entries())this.defines[b[0]]=b[1];return this.needsUpdate=!0,this}setUniforms(a){for(let b of a.entries())this.uniforms[b[0]]=b[1];return this}setExtensions(a){for(let b of(this.extensions={},a))this.extensions[b]=!0;return this}get encodeOutput(){return void 0!==this.defines.ENCODE_OUTPUT}set encodeOutput(a){this.encodeOutput!==a&&(a?this.defines.ENCODE_OUTPUT="1":delete this.defines.ENCODE_OUTPUT,this.needsUpdate=!0)}isOutputEncodingEnabled(a){return this.encodeOutput}setOutputEncodingEnabled(a){this.encodeOutput=a}get time(){return this.uniforms.time.value}set time(a){this.uniforms.time.value=a}setDeltaTime(a){this.uniforms.time.value+=a}adoptCameraSettings(a){a&&(this.uniforms.cameraNear.value=a.near,this.uniforms.cameraFar.value=a.far,a instanceof d.PerspectiveCamera?this.defines.PERSPECTIVE_CAMERA="1":delete this.defines.PERSPECTIVE_CAMERA,this.needsUpdate=!0)}setSize(a,b){let c=this.uniforms;c.resolution.value.set(a,b),c.texelSize.value.set(1/a,1/b),c.aspect.value=a/b}static get Section(){return k}},v=class extends d.ShaderMaterial{constructor(a=!1,b=null){super({name:"LuminanceMaterial",defines:{THREE_REVISION:d.REVISION.replace(/\D+/g,"")},uniforms:{inputBuffer:new d.Uniform(null),threshold:new d.Uniform(0),smoothing:new d.Uniform(1),range:new d.Uniform(null)},blending:d.NoBlending,depthWrite:!1,depthTest:!1,fragmentShader:"#include <common>\n#if THREE_REVISION < 143\n#define luminance(v) linearToRelativeLuminance(v)\n#endif\n#ifdef FRAMEBUFFER_PRECISION_HIGH\nuniform mediump sampler2D inputBuffer;\n#else\nuniform lowp sampler2D inputBuffer;\n#endif\n#ifdef RANGE\nuniform vec2 range;\n#elif defined(THRESHOLD)\nuniform float threshold;uniform float smoothing;\n#endif\nvarying vec2 vUv;void main(){vec4 texel=texture2D(inputBuffer,vUv);float l=luminance(texel.rgb);\n#ifdef RANGE\nfloat low=step(range.x,l);float high=step(l,range.y);l*=low*high;\n#elif defined(THRESHOLD)\nl=smoothstep(threshold,threshold+smoothing,l);\n#endif\n#ifdef COLOR\ngl_FragColor=vec4(texel.rgb*l,l);\n#else\ngl_FragColor=vec4(l);\n#endif\n}",vertexShader:e}),this.toneMapped=!1,this.colorOutput=a,this.luminanceRange=b}set inputBuffer(a){this.uniforms.inputBuffer.value=a}setInputBuffer(a){this.uniforms.inputBuffer.value=a}get threshold(){return this.uniforms.threshold.value}set threshold(a){this.smoothing>0||a>0?this.defines.THRESHOLD="1":delete this.defines.THRESHOLD,this.uniforms.threshold.value=a}getThreshold(){return this.threshold}setThreshold(a){this.threshold=a}get smoothing(){return this.uniforms.smoothing.value}set smoothing(a){this.threshold>0||a>0?this.defines.THRESHOLD="1":delete this.defines.THRESHOLD,this.uniforms.smoothing.value=a}getSmoothingFactor(){return this.smoothing}setSmoothingFactor(a){this.smoothing=a}get useThreshold(){return this.threshold>0||this.smoothing>0}set useThreshold(a){}get colorOutput(){return void 0!==this.defines.COLOR}set colorOutput(a){a?this.defines.COLOR="1":delete this.defines.COLOR,this.needsUpdate=!0}isColorOutputEnabled(a){return this.colorOutput}setColorOutputEnabled(a){this.colorOutput=a}get useRange(){return null!==this.luminanceRange}set useRange(a){this.luminanceRange=null}get luminanceRange(){return this.uniforms.range.value}set luminanceRange(a){null!==a?this.defines.RANGE="1":delete this.defines.RANGE,this.uniforms.range.value=a,this.needsUpdate=!0}getLuminanceRange(){return this.luminanceRange}setLuminanceRange(a){this.luminanceRange=a}},w=class extends d.ShaderMaterial{constructor(){super({name:"UpsamplingMaterial",uniforms:{inputBuffer:new d.Uniform(null),supportBuffer:new d.Uniform(null),texelSize:new d.Uniform(new d.Vector2),radius:new d.Uniform(.85)},blending:d.NoBlending,depthWrite:!1,depthTest:!1,fragmentShader:"#ifdef FRAMEBUFFER_PRECISION_HIGH\nuniform mediump sampler2D inputBuffer;uniform mediump sampler2D supportBuffer;\n#else\nuniform lowp sampler2D inputBuffer;uniform lowp sampler2D supportBuffer;\n#endif\nuniform float radius;varying vec2 vUv;varying vec2 vUv0;varying vec2 vUv1;varying vec2 vUv2;varying vec2 vUv3;varying vec2 vUv4;varying vec2 vUv5;varying vec2 vUv6;varying vec2 vUv7;void main(){vec4 c=vec4(0.0);c+=texture2D(inputBuffer,vUv0)*0.0625;c+=texture2D(inputBuffer,vUv1)*0.125;c+=texture2D(inputBuffer,vUv2)*0.0625;c+=texture2D(inputBuffer,vUv3)*0.125;c+=texture2D(inputBuffer,vUv)*0.25;c+=texture2D(inputBuffer,vUv4)*0.125;c+=texture2D(inputBuffer,vUv5)*0.0625;c+=texture2D(inputBuffer,vUv6)*0.125;c+=texture2D(inputBuffer,vUv7)*0.0625;vec4 baseColor=texture2D(supportBuffer,vUv);gl_FragColor=mix(baseColor,c,radius);\n#include <encodings_fragment>\n}",vertexShader:"uniform vec2 texelSize;varying vec2 vUv;varying vec2 vUv0;varying vec2 vUv1;varying vec2 vUv2;varying vec2 vUv3;varying vec2 vUv4;varying vec2 vUv5;varying vec2 vUv6;varying vec2 vUv7;void main(){vUv=position.xy*0.5+0.5;vUv0=vUv+texelSize*vec2(-1.0,1.0);vUv1=vUv+texelSize*vec2(0.0,1.0);vUv2=vUv+texelSize*vec2(1.0,1.0);vUv3=vUv+texelSize*vec2(-1.0,0.0);vUv4=vUv+texelSize*vec2(1.0,0.0);vUv5=vUv+texelSize*vec2(-1.0,-1.0);vUv6=vUv+texelSize*vec2(0.0,-1.0);vUv7=vUv+texelSize*vec2(1.0,-1.0);gl_Position=vec4(position.xy,1.0,1.0);}"}),this.toneMapped=!1}set inputBuffer(a){this.uniforms.inputBuffer.value=a}set supportBuffer(a){this.uniforms.supportBuffer.value=a}get radius(){return this.uniforms.radius.value}set radius(a){this.uniforms.radius.value=a}setSize(a,b){this.uniforms.texelSize.value.set(1/a,1/b)}},x=new d.Camera,y=null,z=class{constructor(a="Pass",b=new d.Scene,c=x){this.name=a,this.renderer=null,this.scene=b,this.camera=c,this.screen=null,this.rtt=!0,this.needsSwap=!0,this.needsDepthTexture=!1,this.enabled=!0}get renderToScreen(){return!this.rtt}set renderToScreen(a){if(this.rtt===a){let b=this.fullscreenMaterial;null!==b&&(b.needsUpdate=!0),this.rtt=!a}}setRenderer(a){this.renderer=a}isEnabled(){return this.enabled}setEnabled(a){this.enabled=a}get fullscreenMaterial(){return null!==this.screen?this.screen.material:null}set fullscreenMaterial(a){let b=this.screen;null!==b?b.material=a:((b=new d.Mesh(function(){if(null===y){let a=new Float32Array([-1,-1,0,3,-1,0,-1,3,0]),b=new Float32Array([0,0,2,0,0,2]);void 0!==(y=new d.BufferGeometry).setAttribute?(y.setAttribute("position",new d.BufferAttribute(a,3)),y.setAttribute("uv",new d.BufferAttribute(b,2))):(y.addAttribute("position",new d.BufferAttribute(a,3)),y.addAttribute("uv",new d.BufferAttribute(b,2)))}return y}(),a)).frustumCulled=!1,null===this.scene&&(this.scene=new d.Scene),this.scene.add(b),this.screen=b)}getFullscreenMaterial(){return this.fullscreenMaterial}setFullscreenMaterial(a){this.fullscreenMaterial=a}getDepthTexture(){return null}setDepthTexture(a,b=d.BasicDepthPacking){}render(a,b,c,d,e){throw Error("Render method not implemented!")}setSize(a,b){}initialize(a,b,c){}dispose(){for(let a of Object.keys(this)){let b=this[a],c=b instanceof d.WebGLRenderTarget||b instanceof d.Material||b instanceof d.Texture||b instanceof z;c&&this[a].dispose()}}},A=class extends z{constructor(a,b=!0){super("CopyPass"),this.fullscreenMaterial=new r,this.needsSwap=!1,this.renderTarget=a,void 0===a&&(this.renderTarget=new d.WebGLRenderTarget(1,1,{minFilter:d.LinearFilter,magFilter:d.LinearFilter,stencilBuffer:!1,depthBuffer:!1}),this.renderTarget.texture.name="CopyPass.Target"),this.autoResize=b}get resize(){return this.autoResize}set resize(a){this.autoResize=a}get texture(){return this.renderTarget.texture}getTexture(){return this.renderTarget.texture}setAutoResizeEnabled(a){this.autoResize=a}render(a,b,c,d,e){this.fullscreenMaterial.inputBuffer=b.texture,a.setRenderTarget(this.renderToScreen?null:this.renderTarget),a.render(this.scene,this.camera)}setSize(a,b){this.autoResize&&this.renderTarget.setSize(a,b)}initialize(a,b,c){void 0!==c&&(this.renderTarget.texture.type=c,c!==d.UnsignedByteType?this.fullscreenMaterial.defines.FRAMEBUFFER_PRECISION_HIGH="1":a.outputEncoding===d.sRGBEncoding&&(this.renderTarget.texture.encoding=d.sRGBEncoding))}},B=class extends z{constructor(a,{minLuminance:b=.01,adaptationRate:c=1}={}){super("AdaptiveLuminancePass"),this.fullscreenMaterial=new f,this.needsSwap=!1,this.renderTargetPrevious=new d.WebGLRenderTarget(1,1,{minFilter:d.NearestFilter,magFilter:d.NearestFilter,depthBuffer:!1}),this.renderTargetPrevious.texture.name="Luminance.Previous";let e=this.fullscreenMaterial;e.luminanceBuffer0=this.renderTargetPrevious.texture,e.luminanceBuffer1=a,e.minLuminance=b,e.adaptationRate=c,this.renderTargetAdapted=this.renderTargetPrevious.clone(),this.renderTargetAdapted.texture.name="Luminance.Adapted",this.copyPass=new A(this.renderTargetPrevious,!1)}get texture(){return this.renderTargetAdapted.texture}getTexture(){return this.renderTargetAdapted.texture}set mipLevel1x1(a){this.fullscreenMaterial.mipLevel1x1=a}get adaptationRate(){return this.fullscreenMaterial.adaptationRate}set adaptationRate(a){this.fullscreenMaterial.adaptationRate=a}render(a,b,c,d,e){this.fullscreenMaterial.deltaTime=d,a.setRenderTarget(this.renderToScreen?null:this.renderTargetAdapted),a.render(this.scene,this.camera),this.copyPass.render(a,this.renderTargetAdapted)}},C=class extends z{constructor(){super("ClearMaskPass",null,null),this.needsSwap=!1}render(a,b,c,d,e){let f=a.state.buffers.stencil;f.setLocked(!1),f.setTest(!1)}},D=new d.Color,E=class extends z{constructor(a=!0,b=!0,c=!1){super("ClearPass",null,null),this.needsSwap=!1,this.color=a,this.depth=b,this.stencil=c,this.overrideClearColor=null,this.overrideClearAlpha=-1}setClearFlags(a,b,c){this.color=a,this.depth=b,this.stencil=c}getOverrideClearColor(){return this.overrideClearColor}setOverrideClearColor(a){this.overrideClearColor=a}getOverrideClearAlpha(){return this.overrideClearAlpha}setOverrideClearAlpha(a){this.overrideClearAlpha=a}render(a,b,c,d,e){let f=this.overrideClearColor,g=this.overrideClearAlpha,h=a.getClearAlpha(),i=null!==f,j=g>=0;i?(D.copy(a.getClearColor(D)),a.setClearColor(f,j?g:h)):j&&a.setClearAlpha(g),a.setRenderTarget(this.renderToScreen?null:b),a.clear(this.color,this.depth,this.stencil),i?a.setClearColor(D,h):j&&a.setClearAlpha(h)}},F=class extends d.EventDispatcher{constructor(a,b=-1,c=-1,e=1){super(),this.resizable=a,this.baseSize=new d.Vector2(1,1),this.preferredSize=new d.Vector2(b,c),this.target=this.preferredSize,this.s=e,this.effectiveSize=new d.Vector2,this.addEventListener("change",()=>this.updateEffectiveSize()),this.updateEffectiveSize()}updateEffectiveSize(){let a=this.baseSize,b=this.preferredSize,c=this.effectiveSize,d=this.scale;-1!==b.width?c.width=b.width:-1!==b.height?c.width=Math.round(b.height*(a.width/Math.max(a.height,1))):c.width=Math.round(a.width*d),-1!==b.height?c.height=b.height:-1!==b.width?c.height=Math.round(b.width/Math.max(a.width/Math.max(a.height,1),1)):c.height=Math.round(a.height*d)}get width(){return this.effectiveSize.width}set width(a){this.preferredWidth=a}get height(){return this.effectiveSize.height}set height(a){this.preferredHeight=a}getWidth(){return this.width}getHeight(){return this.height}get scale(){return this.s}set scale(a){this.s!==a&&(this.s=a,this.preferredSize.setScalar(-1),this.dispatchEvent({type:"change"}),this.resizable.setSize(this.baseSize.width,this.baseSize.height))}getScale(){return this.scale}setScale(a){this.scale=a}get baseWidth(){return this.baseSize.width}set baseWidth(a){this.baseSize.width!==a&&(this.baseSize.width=a,this.dispatchEvent({type:"change"}),this.resizable.setSize(this.baseSize.width,this.baseSize.height))}getBaseWidth(){return this.baseWidth}setBaseWidth(a){this.baseWidth=a}get baseHeight(){return this.baseSize.height}set baseHeight(a){this.baseSize.height!==a&&(this.baseSize.height=a,this.dispatchEvent({type:"change"}),this.resizable.setSize(this.baseSize.width,this.baseSize.height))}getBaseHeight(){return this.baseHeight}setBaseHeight(a){this.baseHeight=a}setBaseSize(a,b){(this.baseSize.width!==a||this.baseSize.height!==b)&&(this.baseSize.set(a,b),this.dispatchEvent({type:"change"}),this.resizable.setSize(this.baseSize.width,this.baseSize.height))}get preferredWidth(){return this.preferredSize.width}set preferredWidth(a){this.preferredSize.width!==a&&(this.preferredSize.width=a,this.dispatchEvent({type:"change"}),this.resizable.setSize(this.baseSize.width,this.baseSize.height))}getPreferredWidth(){return this.preferredWidth}setPreferredWidth(a){this.preferredWidth=a}get preferredHeight(){return this.preferredSize.height}set preferredHeight(a){this.preferredSize.height!==a&&(this.preferredSize.height=a,this.dispatchEvent({type:"change"}),this.resizable.setSize(this.baseSize.width,this.baseSize.height))}getPreferredHeight(){return this.preferredHeight}setPreferredHeight(a){this.preferredHeight=a}setPreferredSize(a,b){(this.preferredSize.width!==a||this.preferredSize.height!==b)&&(this.preferredSize.set(a,b),this.dispatchEvent({type:"change"}),this.resizable.setSize(this.baseSize.width,this.baseSize.height))}copy(a){this.s=a.scale,this.baseSize.set(a.getBaseWidth(),a.getBaseHeight()),this.preferredSize.set(a.getPreferredWidth(),a.getPreferredHeight()),this.dispatchEvent({type:"change"}),this.resizable.setSize(this.baseSize.width,this.baseSize.height)}static get AUTO_SIZE(){return -1}},G=!1,H=class{constructor(a=null){this.originalMaterials=new Map,this.material=null,this.materials=null,this.materialsBackSide=null,this.materialsDoubleSide=null,this.materialsFlatShaded=null,this.materialsFlatShadedBackSide=null,this.materialsFlatShadedDoubleSide=null,this.setMaterial(a),this.meshCount=0,this.replaceMaterial=a=>{if(a.isMesh){let b;if(a.material.flatShading)switch(a.material.side){case d.DoubleSide:b=this.materialsFlatShadedDoubleSide;break;case d.BackSide:b=this.materialsFlatShadedBackSide;break;default:b=this.materialsFlatShaded}else switch(a.material.side){case d.DoubleSide:b=this.materialsDoubleSide;break;case d.BackSide:b=this.materialsBackSide;break;default:b=this.materials}this.originalMaterials.set(a,a.material),a.isSkinnedMesh?a.material=b[2]:a.isInstancedMesh?a.material=b[1]:a.material=b[0],++this.meshCount}}}setMaterial(a){if(this.disposeMaterials(),this.material=a,null!==a){let b=this.materials=[a.clone(),a.clone(),a.clone()];for(let c of b)c.uniforms=Object.assign({},a.uniforms),c.side=d.FrontSide;b[2].skinning=!0,this.materialsBackSide=b.map(b=>{let c=b.clone();return c.uniforms=Object.assign({},a.uniforms),c.side=d.BackSide,c}),this.materialsDoubleSide=b.map(b=>{let c=b.clone();return c.uniforms=Object.assign({},a.uniforms),c.side=d.DoubleSide,c}),this.materialsFlatShaded=b.map(b=>{let c=b.clone();return c.uniforms=Object.assign({},a.uniforms),c.flatShading=!0,c}),this.materialsFlatShadedBackSide=b.map(b=>{let c=b.clone();return c.uniforms=Object.assign({},a.uniforms),c.flatShading=!0,c.side=d.BackSide,c}),this.materialsFlatShadedDoubleSide=b.map(b=>{let c=b.clone();return c.uniforms=Object.assign({},a.uniforms),c.flatShading=!0,c.side=d.DoubleSide,c})}}render(a,b,c){let d=a.shadowMap.enabled;if(a.shadowMap.enabled=!1,G){let e=this.originalMaterials;for(let f of(this.meshCount=0,b.traverse(this.replaceMaterial),a.render(b,c),e))f[0].material=f[1];this.meshCount!==e.size&&e.clear()}else{let g=b.overrideMaterial;b.overrideMaterial=this.material,a.render(b,c),b.overrideMaterial=g}a.shadowMap.enabled=d}disposeMaterials(){if(null!==this.material){let a=this.materials.concat(this.materialsBackSide).concat(this.materialsDoubleSide).concat(this.materialsFlatShaded).concat(this.materialsFlatShadedBackSide).concat(this.materialsFlatShadedDoubleSide);for(let b of a)b.dispose()}}dispose(){this.originalMaterials.clear(),this.disposeMaterials()}static get workaroundEnabled(){return G}static set workaroundEnabled(a){G=a}},I=class extends z{constructor(a,b,c=null){super("RenderPass",a,b),this.needsSwap=!1,this.clearPass=new E,this.overrideMaterialManager=null===c?null:new H(c),this.ignoreBackground=!1,this.skipShadowMapUpdate=!1,this.selection=null}get renderToScreen(){return super.renderToScreen}set renderToScreen(a){super.renderToScreen=a,this.clearPass.renderToScreen=a}get overrideMaterial(){let a=this.overrideMaterialManager;return null!==a?a.material:null}set overrideMaterial(a){let b=this.overrideMaterialManager;null!==a?null!==b?b.setMaterial(a):this.overrideMaterialManager=new H(a):null!==b&&(b.dispose(),this.overrideMaterialManager=null)}getOverrideMaterial(){return this.overrideMaterial}setOverrideMaterial(a){this.overrideMaterial=a}get clear(){return this.clearPass.enabled}set clear(a){this.clearPass.enabled=a}getSelection(){return this.selection}setSelection(a){this.selection=a}isBackgroundDisabled(){return this.ignoreBackground}setBackgroundDisabled(a){this.ignoreBackground=a}isShadowMapDisabled(){return this.skipShadowMapUpdate}setShadowMapDisabled(a){this.skipShadowMapUpdate=a}getClearPass(){return this.clearPass}render(a,b,c,d,e){let f=this.scene,g=this.camera,h=this.selection,i=g.layers.mask,j=f.background,k=a.shadowMap.autoUpdate,l=this.renderToScreen?null:b;null!==h&&g.layers.set(h.getLayer()),this.skipShadowMapUpdate&&(a.shadowMap.autoUpdate=!1),(this.ignoreBackground||null!==this.clearPass.overrideClearColor)&&(f.background=null),this.clearPass.enabled&&this.clearPass.render(a,b),a.setRenderTarget(l),null!==this.overrideMaterialManager?this.overrideMaterialManager.render(a,f,g):a.render(f,g),g.layers.mask=i,f.background=j,a.shadowMap.autoUpdate=k}},J=class extends z{constructor({normalBuffer:a=null,resolutionScale:b=.5,width:c=F.AUTO_SIZE,height:e=F.AUTO_SIZE,resolutionX:f=c,resolutionY:g=e}={}){super("DepthDownsamplingPass");let h=new s;h.normalBuffer=a,this.fullscreenMaterial=h,this.needsDepthTexture=!0,this.needsSwap=!1,this.renderTarget=new d.WebGLRenderTarget(1,1,{minFilter:d.NearestFilter,magFilter:d.NearestFilter,depthBuffer:!1,type:d.FloatType}),this.renderTarget.texture.name="DepthDownsamplingPass.Target",this.renderTarget.texture.generateMipmaps=!1;let i=this.resolution=new F(this,f,g,b);i.addEventListener("change",a=>this.setSize(i.baseWidth,i.baseHeight))}get texture(){return this.renderTarget.texture}getTexture(){return this.renderTarget.texture}getResolution(){return this.resolution}setDepthTexture(a,b=d.BasicDepthPacking){this.fullscreenMaterial.depthBuffer=a,this.fullscreenMaterial.depthPacking=b}render(a,b,c,d,e){a.setRenderTarget(this.renderToScreen?null:this.renderTarget),a.render(this.scene,this.camera)}setSize(a,b){this.fullscreenMaterial.setSize(a,b);let c=this.resolution;c.setBaseSize(a,b),this.renderTarget.setSize(c.width,c.height)}initialize(a,b,c){if(!a.capabilities.isWebGL2)throw Error("The DepthDownsamplingPass requires WebGL 2")}};function K(a,b,c){for(let d of b){let e="$1"+a+d.charAt(0).toUpperCase()+d.slice(1),f=RegExp("([^\\.])(\\b"+d+"\\b)","g");for(let g of c.entries())null!==g[1]&&c.set(g[0],g[1].replace(f,e))}}function L(a,b,c){var e,f,g,h,i;let l=b.getFragmentShader(),m=b.getVertexShader(),n=void 0!==l&&/mainImage/.test(l),o=void 0!==l&&/mainUv/.test(l);if(c.attributes|=b.getAttributes(),void 0===l)throw Error(`Missing fragment shader (${b.name})`);if(o&&(c.attributes&j.CONVOLUTION)!=0)throw Error(`Effects that transform UVs are incompatible with convolution effects (${b.name})`);if(n||o){let p=/\w+\s+(\w+)\([\w\s,]*\)\s*{/g,q=c.shaderParts,r=null!=(e=q.get(k.FRAGMENT_HEAD))?e:"",s=null!=(f=q.get(k.FRAGMENT_MAIN_UV))?f:"",t=null!=(g=q.get(k.FRAGMENT_MAIN_IMAGE))?g:"",u=null!=(h=q.get(k.VERTEX_HEAD))?h:"",v=null!=(i=q.get(k.VERTEX_MAIN_SUPPORT))?i:"",w=new Set,x=new Set;if(o&&(s+=`	${a}MainUv(UV);
`,c.uvTransformation=!0),null!==m&&/mainSupport/.test(m)){let y=/mainSupport *\([\w\s]*?uv\s*?\)/.test(m);for(let z of(v+=`	${a}MainSupport(`,v+=y?"vUv);\n":");\n",m.matchAll(/(?:varying\s+\w+\s+(\w*))/g)))c.varyings.add(z[1]),w.add(z[1]),x.add(z[1]);for(let A of m.matchAll(p))x.add(A[1])}for(let B of l.matchAll(p))x.add(B[1]);for(let C of b.defines.keys())x.add(C.replace(/\([\w\s,]*\)/g,""));for(let D of b.uniforms.keys())x.add(D);x.delete("while"),x.delete("for"),x.delete("if"),b.uniforms.forEach((b,d)=>c.uniforms.set(a+d.charAt(0).toUpperCase()+d.slice(1),b)),b.defines.forEach((b,d)=>c.defines.set(a+d.charAt(0).toUpperCase()+d.slice(1),b));let E=new Map([["fragment",l],["vertex",m]]);K(a,x,c.defines),K(a,x,E),l=E.get("fragment"),m=E.get("vertex");let F=b.blendMode;if(c.blendModes.set(F.blendFunction,F),n){null!==b.inputColorSpace&&b.inputColorSpace!==c.colorSpace&&(t+=b.inputColorSpace===d.sRGBEncoding?"color0 = LinearTosRGB(color0);\n	":"color0 = sRGBToLinear(color0);\n	"),null!==b.outputColorSpace?c.colorSpace=b.outputColorSpace:null!==b.inputColorSpace&&(c.colorSpace=b.inputColorSpace);let G=/MainImage *\([\w\s,]*?depth[\w\s,]*?\)/;t+=`${a}MainImage(color0, UV, `,(c.attributes&j.DEPTH)!=0&&G.test(l)&&(t+="depth, ",c.readDepth=!0),t+="color1);\n	";let H=a+"BlendOpacity";c.uniforms.set(H,F.opacity),t+=`color0 = blend${F.blendFunction}(color0, color1, ${H});

	`,r+=`uniform float ${H};

`}if(r+=l+"\n",null!==m&&(u+=m+"\n"),q.set(k.FRAGMENT_HEAD,r),q.set(k.FRAGMENT_MAIN_UV,s),q.set(k.FRAGMENT_MAIN_IMAGE,t),q.set(k.VERTEX_HEAD,u),q.set(k.VERTEX_MAIN_SUPPORT,v),null!==b.extensions)for(let I of b.extensions)c.extensions.add(I)}else throw Error(`Could not find mainImage or mainUv function (${b.name})`)}new Float32Array([255/256/16777216,255/256/65536,255/256/256,255/256]);var M=class extends z{constructor(a,...b){super("EffectPass"),this.fullscreenMaterial=new u(null,null,null,a),this.listener=a=>this.handleEvent(a),this.effects=[],this.setEffects(b),this.skipRendering=!1,this.minTime=1,this.maxTime=Number.POSITIVE_INFINITY}get encodeOutput(){return this.fullscreenMaterial.encodeOutput}set encodeOutput(a){this.fullscreenMaterial.encodeOutput=a}get dithering(){return this.fullscreenMaterial.dithering}set dithering(a){let b=this.fullscreenMaterial;b.dithering=a,b.needsUpdate=!0}setEffects(a){for(let b of this.effects)b.removeEventListener("change",this.listener);for(let c of(this.effects=a.sort((a,b)=>b.attributes-a.attributes),this.effects))c.addEventListener("change",this.listener)}updateMaterial(){let a=new T,b=0;for(let c of this.effects)if(c.blendMode.blendFunction===h.DST)a.attributes|=c.getAttributes()&j.DEPTH;else if((a.attributes&c.getAttributes()&j.CONVOLUTION)!=0)throw Error(`Convolution effects cannot be merged (${c.name})`);else L("e"+b++,c,a);let e=a.shaderParts.get(k.FRAGMENT_HEAD),f=a.shaderParts.get(k.FRAGMENT_MAIN_IMAGE),g=a.shaderParts.get(k.FRAGMENT_MAIN_UV),i=/\bblend\b/g;for(let l of a.blendModes.values())e+=l.getShaderCode().replace(i,`blend${l.blendFunction}`)+"\n";(a.attributes&j.DEPTH)!=0?(a.readDepth&&(f="float depth = readDepth(UV);\n\n	"+f),this.needsDepthTexture=null===this.getDepthTexture()):this.needsDepthTexture=!1,a.colorSpace===d.sRGBEncoding&&(f+="color0 = sRGBToLinear(color0);\n	"),a.uvTransformation?(g="vec2 transformedUv = vUv;\n"+g,a.defines.set("UV","transformedUv")):a.defines.set("UV","vUv"),a.shaderParts.set(k.FRAGMENT_HEAD,e),a.shaderParts.set(k.FRAGMENT_MAIN_IMAGE,f),a.shaderParts.set(k.FRAGMENT_MAIN_UV,g),a.shaderParts.forEach((a,b,c)=>c.set(b,null==a?void 0:a.trim().replace(/^#/,"\n#"))),this.skipRendering=0===b,this.needsSwap=!this.skipRendering,this.fullscreenMaterial.setShaderData(a)}recompile(){this.updateMaterial()}getDepthTexture(){return this.fullscreenMaterial.depthBuffer}setDepthTexture(a,b=d.BasicDepthPacking){for(let c of(this.fullscreenMaterial.depthBuffer=a,this.fullscreenMaterial.depthPacking=b,this.effects))c.setDepthTexture(a,b)}render(a,b,c,d,e){for(let f of this.effects)f.update(a,b,d);if(!this.skipRendering||this.renderToScreen){let g=this.fullscreenMaterial;g.inputBuffer=b.texture,g.time+=d,a.setRenderTarget(this.renderToScreen?null:c),a.render(this.scene,this.camera)}}setSize(a,b){for(let c of(this.fullscreenMaterial.setSize(a,b),this.effects))c.setSize(a,b)}initialize(a,b,c){for(let e of(this.renderer=a,this.effects))e.initialize(a,b,c);this.updateMaterial(),void 0!==c&&c!==d.UnsignedByteType&&(this.fullscreenMaterial.defines.FRAMEBUFFER_PRECISION_HIGH="1")}dispose(){for(let a of(super.dispose(),this.effects))a.removeEventListener("change",this.listener),a.dispose()}handleEvent(a){"change"===a.type&&this.recompile()}},N=class extends z{constructor({kernelSize:a=l.MEDIUM,resolutionScale:b=.5,width:c=F.AUTO_SIZE,height:e=F.AUTO_SIZE,resolutionX:f=c,resolutionY:g=e}={}){super("KawaseBlurPass"),this.renderTargetA=new d.WebGLRenderTarget(1,1,{depthBuffer:!1}),this.renderTargetA.texture.name="Blur.Target.A",this.renderTargetB=this.renderTargetA.clone(),this.renderTargetB.texture.name="Blur.Target.B";let h=this.resolution=new F(this,f,g,b);h.addEventListener("change",a=>this.setSize(h.baseWidth,h.baseHeight)),this.blurMaterial=new q,this.copyMaterial=new r}getResolution(){return this.resolution}get dithering(){return this.copyMaterial.dithering}set dithering(a){this.copyMaterial.dithering=a}get kernelSize(){return this.blurMaterial.kernelSize}set kernelSize(a){this.blurMaterial.kernelSize=a}get width(){return this.resolution.width}set width(a){this.resolution.preferredWidth=a}get height(){return this.resolution.height}set height(a){this.resolution.preferredHeight=a}get scale(){return this.blurMaterial.scale}set scale(a){this.blurMaterial.scale=a}getScale(){return this.blurMaterial.scale}setScale(a){this.blurMaterial.scale=a}getKernelSize(){return this.kernelSize}setKernelSize(a){this.kernelSize=a}getResolutionScale(){return this.resolution.scale}setResolutionScale(a){this.resolution.scale=a}render(a,b,c,d,e){let f=this.scene,g=this.camera,h=this.renderTargetA,i=this.renderTargetB,j=this.blurMaterial,k=j.kernelSequence,l=b;this.fullscreenMaterial=j;for(let m=0,n=k.length;m<n;++m){let o=(1&m)==0?h:i;j.kernel=k[m],j.inputBuffer=l.texture,a.setRenderTarget(o),a.render(f,g),l=o}this.fullscreenMaterial=this.copyMaterial,this.copyMaterial.inputBuffer=l.texture,a.setRenderTarget(this.renderToScreen?null:c),a.render(f,g)}setSize(a,b){let c=this.resolution;c.setBaseSize(a,b);let d=c.width,e=c.height;this.renderTargetA.setSize(d,e),this.renderTargetB.setSize(d,e),this.blurMaterial.setSize(a,b)}initialize(a,b,c){void 0!==c&&(this.renderTargetA.texture.type=c,this.renderTargetB.texture.type=c,c!==d.UnsignedByteType?(this.blurMaterial.defines.FRAMEBUFFER_PRECISION_HIGH="1",this.copyMaterial.defines.FRAMEBUFFER_PRECISION_HIGH="1"):a.outputEncoding===d.sRGBEncoding&&(this.renderTargetA.texture.encoding=d.sRGBEncoding,this.renderTargetB.texture.encoding=d.sRGBEncoding))}static get AUTO_SIZE(){return F.AUTO_SIZE}},O=class extends z{constructor({renderTarget:a,luminanceRange:b,colorOutput:c,resolutionScale:e=1,width:f=F.AUTO_SIZE,height:g=F.AUTO_SIZE,resolutionX:h=f,resolutionY:i=g}={}){super("LuminancePass"),this.fullscreenMaterial=new v(c,b),this.needsSwap=!1,this.renderTarget=a,void 0===this.renderTarget&&(this.renderTarget=new d.WebGLRenderTarget(1,1,{depthBuffer:!1}),this.renderTarget.texture.name="LuminancePass.Target");let j=this.resolution=new F(this,h,i,e);j.addEventListener("change",a=>this.setSize(j.baseWidth,j.baseHeight))}get texture(){return this.renderTarget.texture}getTexture(){return this.renderTarget.texture}getResolution(){return this.resolution}render(a,b,c,d,e){let f=this.fullscreenMaterial;f.inputBuffer=b.texture,a.setRenderTarget(this.renderToScreen?null:this.renderTarget),a.render(this.scene,this.camera)}setSize(a,b){let c=this.resolution;c.setBaseSize(a,b),this.renderTarget.setSize(c.width,c.height)}initialize(a,b,c){void 0!==c&&c!==d.UnsignedByteType&&(this.renderTarget.texture.type=c,this.fullscreenMaterial.defines.FRAMEBUFFER_PRECISION_HIGH="1")}},P=class extends z{constructor(a,b){super("MaskPass",a,b),this.needsSwap=!1,this.clearPass=new E(!1,!1,!0),this.inverse=!1}get inverted(){return this.inverse}set inverted(a){this.inverse=a}get clear(){return this.clearPass.enabled}set clear(a){this.clearPass.enabled=a}getClearPass(){return this.clearPass}isInverted(){return this.inverted}setInverted(a){this.inverted=a}render(a,b,c,d,e){let f=a.getContext(),g=a.state.buffers,h=this.scene,i=this.camera,j=this.clearPass,k=this.inverted?0:1;g.color.setMask(!1),g.depth.setMask(!1),g.color.setLocked(!0),g.depth.setLocked(!0),g.stencil.setTest(!0),g.stencil.setOp(f.REPLACE,f.REPLACE,f.REPLACE),g.stencil.setFunc(f.ALWAYS,k,4294967295),g.stencil.setClear(1-k),g.stencil.setLocked(!0),this.clearPass.enabled&&(this.renderToScreen?j.render(a,null):(j.render(a,b),j.render(a,c))),this.renderToScreen?(a.setRenderTarget(null),a.render(h,i)):(a.setRenderTarget(b),a.render(h,i),a.setRenderTarget(c),a.render(h,i)),g.color.setLocked(!1),g.depth.setLocked(!1),g.stencil.setLocked(!1),g.stencil.setFunc(f.EQUAL,1,4294967295),g.stencil.setOp(f.KEEP,f.KEEP,f.KEEP),g.stencil.setLocked(!0)}},Q=class extends z{constructor(){super("MipmapBlurPass"),this.needsSwap=!1,this.renderTarget=new d.WebGLRenderTarget(1,1,{depthBuffer:!1}),this.renderTarget.texture.name="Upsampling.Mipmap0",this.downsamplingMipmaps=[],this.upsamplingMipmaps=[],this.downsamplingMaterial=new t,this.upsamplingMaterial=new w,this.resolution=new d.Vector2}get texture(){return this.renderTarget.texture}get levels(){return this.downsamplingMipmaps.length}set levels(a){if(this.levels!==a){let b=this.renderTarget;this.dispose();for(let c=0;c<a;++c){let d=b.clone();d.texture.name="Downsampling.Mipmap"+c,this.downsamplingMipmaps.push(d)}this.upsamplingMipmaps.push(b);for(let e=1,f=a-1;e<f;++e){let g=b.clone();g.texture.name="Upsampling.Mipmap"+e,this.upsamplingMipmaps.push(g)}this.setSize(this.resolution.x,this.resolution.y)}}get radius(){return this.upsamplingMaterial.radius}set radius(a){this.upsamplingMaterial.radius=a}render(a,b,c,d,e){let{scene:f,camera:g}=this,{downsamplingMaterial:h,upsamplingMaterial:i}=this,{downsamplingMipmaps:j,upsamplingMipmaps:k}=this,l=b;this.fullscreenMaterial=h;for(let m=0,n=j.length;m<n;++m){let o=j[m];h.setSize(l.width,l.height),h.inputBuffer=l.texture,a.setRenderTarget(o),a.render(f,g),l=o}this.fullscreenMaterial=i;for(let p=k.length-1;p>=0;--p){let q=k[p];i.setSize(l.width,l.height),i.inputBuffer=l.texture,i.supportBuffer=j[p].texture,a.setRenderTarget(q),a.render(f,g),l=q}}setSize(a,b){let c=this.resolution;c.set(a,b);let d=c.width,e=c.height;for(let f=0,g=this.downsamplingMipmaps.length;f<g;++f)d=Math.round(.5*d),e=Math.round(.5*e),this.downsamplingMipmaps[f].setSize(d,e),f<this.upsamplingMipmaps.length&&this.upsamplingMipmaps[f].setSize(d,e)}initialize(a,b,c){if(void 0!==c){let e=this.downsamplingMipmaps.concat(this.upsamplingMipmaps);for(let f of e)f.texture.type=c;if(c!==d.UnsignedByteType)this.downsamplingMaterial.defines.FRAMEBUFFER_PRECISION_HIGH="1",this.upsamplingMaterial.defines.FRAMEBUFFER_PRECISION_HIGH="1";else if(a.outputEncoding===d.sRGBEncoding)for(let g of e)g.texture.encoding=d.sRGBEncoding}}dispose(){for(let a of(super.dispose(),this.downsamplingMipmaps.concat(this.upsamplingMipmaps)))a.dispose();this.downsamplingMipmaps=[],this.upsamplingMipmaps=[]}},R=class extends z{constructor(a,b,{renderTarget:c,resolutionScale:e=1,width:f=F.AUTO_SIZE,height:g=F.AUTO_SIZE,resolutionX:h=f,resolutionY:i=g}={}){super("NormalPass"),this.needsSwap=!1,this.renderPass=new I(a,b,new d.MeshNormalMaterial);let j=this.renderPass;j.setBackgroundDisabled(!0),j.setShadowMapDisabled(!0);let k=j.getClearPass();k.setOverrideClearColor(new d.Color(7829503)),k.setOverrideClearAlpha(1),this.renderTarget=c,void 0===this.renderTarget&&(this.renderTarget=new d.WebGLRenderTarget(1,1,{minFilter:d.NearestFilter,magFilter:d.NearestFilter}),this.renderTarget.texture.name="NormalPass.Target");let l=this.resolution=new F(this,h,i,e);l.addEventListener("change",a=>this.setSize(l.baseWidth,l.baseHeight))}get texture(){return this.renderTarget.texture}getTexture(){return this.renderTarget.texture}getResolution(){return this.resolution}getResolutionScale(){return this.resolution.scale}setResolutionScale(a){this.resolution.scale=a}render(a,b,c,d,e){let f=this.renderToScreen?null:this.renderTarget;this.renderPass.render(a,f,f)}setSize(a,b){let c=this.resolution;c.setBaseSize(a,b),this.renderTarget.setSize(c.width,c.height)}},S=class{constructor(a=null,{depthBuffer:b=!0,stencilBuffer:c=!1,multisampling:d=0,frameBufferType:e}={}){this.renderer=null,this.inputBuffer=this.createBuffer(b,c,e,d),this.outputBuffer=this.inputBuffer.clone(),this.copyPass=new A,this.depthTexture=null,this.passes=[],this.timer=new class{constructor(){this.previousTime=0,this.currentTime=0,this.delta=0,this.fixedDelta=1e3/60,this.elapsed=0,this.timescale=1,this.fixedDeltaEnabled=!1,this.autoReset=!1}setFixedDeltaEnabled(a){return this.fixedDeltaEnabled=a,this}isAutoResetEnabled(a){return this.autoReset}setAutoResetEnabled(a){return"undefined"!=typeof document&& void 0!==document.hidden&&(a?document.addEventListener("visibilitychange",this):document.removeEventListener("visibilitychange",this),this.autoReset=a),this}getDelta(){return .001*this.delta}getFixedDelta(){return .001*this.fixedDelta}setFixedDelta(a){return this.fixedDelta=1e3*a,this}getElapsed(){return .001*this.elapsed}getTimescale(){return this.timescale}setTimescale(a){return this.timescale=a,this}update(a){return this.fixedDeltaEnabled?this.delta=this.fixedDelta:(this.previousTime=this.currentTime,this.currentTime=void 0!==a?a:performance.now(),this.delta=this.currentTime-this.previousTime),this.delta*=this.timescale,this.elapsed+=this.delta,this}reset(){return this.delta=0,this.elapsed=0,this.currentTime=performance.now(),this}handleEvent(a){document.hidden||(this.currentTime=performance.now())}dispose(){this.setAutoResetEnabled(!1)}},this.autoRenderToScreen=!0,this.setRenderer(a)}get multisampling(){return this.inputBuffer.samples||0}set multisampling(a){let b=this.inputBuffer,c=this.multisampling;c>0&&a>0?(this.inputBuffer.samples=a,this.outputBuffer.samples=a,this.inputBuffer.dispose(),this.outputBuffer.dispose()):c!==a&&(this.inputBuffer.dispose(),this.outputBuffer.dispose(),this.inputBuffer=this.createBuffer(b.depthBuffer,b.stencilBuffer,b.texture.type,a),this.inputBuffer.depthTexture=this.depthTexture,this.outputBuffer=this.inputBuffer.clone())}getTimer(){return this.timer}getRenderer(){return this.renderer}setRenderer(a){if(this.renderer=a,null!==a){let b=a.getSize(new d.Vector2),c=a.getContext().getContextAttributes().alpha,e=this.inputBuffer.texture.type;for(let f of(e===d.UnsignedByteType&&a.outputEncoding===d.sRGBEncoding&&(this.inputBuffer.texture.encoding=d.sRGBEncoding,this.outputBuffer.texture.encoding=d.sRGBEncoding,this.inputBuffer.dispose(),this.outputBuffer.dispose()),a.autoClear=!1,this.setSize(b.width,b.height),this.passes))f.initialize(a,c,e)}}replaceRenderer(a,b=!0){let c=this.renderer,d=c.domElement.parentNode;return this.setRenderer(a),b&&null!==d&&(d.removeChild(c.domElement),d.appendChild(a.domElement)),c}createDepthTexture(){let a=this.depthTexture=new d.DepthTexture;return this.inputBuffer.depthTexture=a,this.inputBuffer.dispose(),this.inputBuffer.stencilBuffer?(a.format=d.DepthStencilFormat,a.type=d.UnsignedInt248Type):a.type=d.UnsignedIntType,a}deleteDepthTexture(){if(null!==this.depthTexture)for(let a of(this.depthTexture.dispose(),this.depthTexture=null,this.inputBuffer.depthTexture=null,this.inputBuffer.dispose(),this.passes))a.setDepthTexture(null)}createBuffer(a,b,c,e){let f=this.renderer,g=null===f?new d.Vector2:f.getDrawingBufferSize(new d.Vector2),h={minFilter:d.LinearFilter,magFilter:d.LinearFilter,stencilBuffer:b,depthBuffer:a,type:c},i;return e>0?((i=138>Number(d.REVISION.replace(/\D+/g,""))?new d.WebGLMultisampleRenderTarget(g.width,g.height,h):new d.WebGLRenderTarget(g.width,g.height,h)).ignoreDepthForMultisampleCopy=!1,i.samples=e):i=new d.WebGLRenderTarget(g.width,g.height,h),c===d.UnsignedByteType&&null!==f&&f.outputEncoding===d.sRGBEncoding&&(i.texture.encoding=d.sRGBEncoding),i.texture.name="EffectComposer.Buffer",i.texture.generateMipmaps=!1,i}addPass(a,b){let c=this.passes,e=this.renderer,f=e.getDrawingBufferSize(new d.Vector2),g=e.getContext().getContextAttributes().alpha,h=this.inputBuffer.texture.type;if(a.setRenderer(e),a.setSize(f.width,f.height),a.initialize(e,g,h),this.autoRenderToScreen&&(c.length>0&&(c[c.length-1].renderToScreen=!1),a.renderToScreen&&(this.autoRenderToScreen=!1)),void 0!==b?c.splice(b,0,a):c.push(a),this.autoRenderToScreen&&(c[c.length-1].renderToScreen=!0),a.needsDepthTexture||null!==this.depthTexture){if(null===this.depthTexture){let i=this.createDepthTexture();for(a of c)a.setDepthTexture(i)}else a.setDepthTexture(this.depthTexture)}}removePass(a){let b=this.passes,c=b.indexOf(a),d=-1!==c&&b.splice(c,1).length>0;if(d){if(null!==this.depthTexture){let e=(a,b)=>a||b.needsDepthTexture,f=b.reduce(e,!1);f||(a.getDepthTexture()===this.depthTexture&&a.setDepthTexture(null),this.deleteDepthTexture())}this.autoRenderToScreen&&c===b.length&&(a.renderToScreen=!1,b.length>0&&(b[b.length-1].renderToScreen=!0))}}removeAllPasses(){let a=this.passes;this.deleteDepthTexture(),a.length>0&&(this.autoRenderToScreen&&(a[a.length-1].renderToScreen=!1),this.passes=[])}render(a){let b=this.renderer,c=this.copyPass,d=this.inputBuffer,e=this.outputBuffer,f=!1,g,h,i;for(let j of(void 0===a&&(a=this.timer.update().getDelta()),this.passes))j.enabled&&(j.render(b,d,e,a,f),j.needsSwap&&(f&&(c.renderToScreen=j.renderToScreen,g=b.getContext(),h=b.state.buffers.stencil,h.setFunc(g.NOTEQUAL,1,4294967295),c.render(b,d,e,a,f),h.setFunc(g.EQUAL,1,4294967295)),i=d,d=e,e=i),j instanceof P?f=!0:j instanceof C&&(f=!1))}setSize(a,b,c){let e=this.renderer;if(void 0===a|| void 0===b){let f=e.getSize(new d.Vector2);a=f.width,b=f.height}e.setSize(a,b,c);let g=e.getDrawingBufferSize(new d.Vector2);for(let h of(this.inputBuffer.setSize(g.width,g.height),this.outputBuffer.setSize(g.width,g.height),this.passes))h.setSize(g.width,g.height)}reset(){let a=this.timer.isAutoResetEnabled();this.dispose(),this.autoRenderToScreen=!0,this.timer.setAutoResetEnabled(a)}dispose(){for(let a of this.passes)a.dispose();this.passes=[],null!==this.inputBuffer&&this.inputBuffer.dispose(),null!==this.outputBuffer&&this.outputBuffer.dispose(),this.deleteDepthTexture(),this.copyPass.dispose(),this.timer.dispose()}},T=class{constructor(){this.shaderParts=new Map([[k.FRAGMENT_HEAD,null],[k.FRAGMENT_MAIN_UV,null],[k.FRAGMENT_MAIN_IMAGE,null],[k.VERTEX_HEAD,null],[k.VERTEX_MAIN_SUPPORT,null]]),this.defines=new Map,this.uniforms=new Map,this.blendModes=new Map,this.extensions=new Set,this.attributes=j.NONE,this.varyings=new Set,this.uvTransformation=!1,this.readDepth=!1,this.colorSpace=d.LinearEncoding}};function U(a){let b;if(0===a)b=new Float64Array(0);else if(1===a)b=new Float64Array([1]);else if(a>1){let c=new Float64Array(a),d=new Float64Array(a);for(let e=1;e<=a;++e){for(let f=0;f<e;++f)d[f]=0===f||f===e-1?1:c[f-1]+c[f];b=d,d=c,c=b}}return b}var V=class{constructor(a,b=2){this.weights=null,this.offsets=null,this.linearWeights=null,this.linearOffsets=null,this.generate(a,b)}get steps(){return null===this.offsets?0:this.offsets.length}get linearSteps(){return null===this.linearOffsets?0:this.linearOffsets.length}generate(a,b){if(a<3||a>1020)throw Error("The kernel size must be in the range [3, 1020]");let c=a+2*b,d=b>0?U(c).slice(b,-b):U(c),e=Math.floor((d.length-1)/2),f=d.reduce((a,b)=>a+b,0),g=d.slice(e),h=[...Array(e+1).keys()],i=new Float64Array(Math.floor(h.length/2)),j=new Float64Array(i.length);i[0]=g[0]/f;for(let k=1,l=1,m=h.length-1;k<m;k+=2,++l){let n=h[k],o=h[k+1],p=g[k],q=g[k+1],r=p+q,s=(n*p+o*q)/r;i[l]=r/f,j[l]=s}for(let t=0,u=g.length,v=1/f;t<u;++t)g[t]*=v;let w=(i.reduce((a,b)=>a+b,0)-.5*i[0])*2;if(0!==w)for(let x=0,y=i.length,z=1/w;x<y;++x)i[x]*=z;this.offsets=h,this.weights=g,this.linearOffsets=j,this.linearWeights=i}},W=(Set,new Map([[h.ADD,"vec4 blend(const in vec4 x,const in vec4 y,const in float opacity){return mix(x,x+y,opacity);}"],[h.ALPHA,"vec4 blend(const in vec4 x,const in vec4 y,const in float opacity){return mix(x,y,min(y.a,opacity));}"],[h.AVERAGE,"vec4 blend(const in vec4 x,const in vec4 y,const in float opacity){return mix(x,(x+y)*0.5,opacity);}"],[h.COLOR,"vec4 blend(const in vec4 x,const in vec4 y,const in float opacity){vec3 xHSL=RGBToHSL(x.rgb);vec3 yHSL=RGBToHSL(y.rgb);vec3 z=HSLToRGB(vec3(yHSL.rg,xHSL.b));return vec4(mix(x.rgb,z,opacity),y.a);}"],[h.COLOR_BURN,"vec4 blend(const in vec4 x,const in vec4 y,const in float opacity){vec4 z=mix(step(0.0,y)*(1.0-min(vec4(1.0),(1.0-x)/y)),vec4(1.0),step(1.0,x));return mix(x,z,opacity);}"],[h.COLOR_DODGE,"vec4 blend(const in vec4 x,const in vec4 y,const in float opacity){vec4 z=step(0.0,x)*mix(min(vec4(1.0),x/max(1.0-y,1e-9)),vec4(1.0),step(1.0,y));return mix(x,z,opacity);}"],[h.DARKEN,"vec4 blend(const in vec4 x,const in vec4 y,const in float opacity){return mix(x,min(x,y),opacity);}"],[h.DIFFERENCE,"vec4 blend(const in vec4 x,const in vec4 y,const in float opacity){return mix(x,abs(x-y),opacity);}"],[h.DIVIDE,"vec4 blend(const in vec4 x,const in vec4 y,const in float opacity){return mix(x,x/max(y,1e-12),opacity);}"],[h.DST,null],[h.EXCLUSION,"vec4 blend(const in vec4 x,const in vec4 y,const in float opacity){return mix(x,(x+y-2.0*x*y),opacity);}"],[h.HARD_LIGHT,"vec4 blend(const in vec4 x,const in vec4 y,const in float opacity){vec4 a=min(x,1.0),b=min(y,1.0);vec4 z=mix(2.0*a*b,1.0-2.0*(1.0-a)*(1.0-b),step(0.5,y));return mix(x,z,opacity);}"],[h.HARD_MIX,"vec4 blend(const in vec4 x,const in vec4 y,const in float opacity){return mix(x,step(1.0,x+y),opacity);}"],[h.HUE,"vec4 blend(const in vec4 x,const in vec4 y,const in float opacity){vec3 xHSL=RGBToHSL(x.rgb);vec3 yHSL=RGBToHSL(y.rgb);vec3 z=HSLToRGB(vec3(yHSL.r,xHSL.gb));return vec4(mix(x.rgb,z,opacity),y.a);}"],[h.INVERT,"vec4 blend(const in vec4 x,const in vec4 y,const in float opacity){return mix(x,1.0-y,opacity);}"],[h.INVERT_RGB,"vec4 blend(const in vec4 x,const in vec4 y,const in float opacity){return mix(x,y*(1.0-x),opacity);}"],[h.LIGHTEN,"vec4 blend(const in vec4 x,const in vec4 y,const in float opacity){return mix(x,max(x,y),opacity);}"],[h.LINEAR_BURN,"vec4 blend(const in vec4 x,const in vec4 y,const in float opacity){return mix(x,clamp(y+x-1.0,0.0,1.0),opacity);}"],[h.LINEAR_DODGE,"vec4 blend(const in vec4 x,const in vec4 y,const in float opacity){return mix(x,min(x+y,1.0),opacity);}"],[h.LINEAR_LIGHT,"vec4 blend(const in vec4 x,const in vec4 y,const in float opacity){return mix(x,clamp(2.0*y+x-1.0,0.0,1.0),opacity);}"],[h.LUMINOSITY,"vec4 blend(const in vec4 x,const in vec4 y,const in float opacity){vec3 xHSL=RGBToHSL(x.rgb);vec3 yHSL=RGBToHSL(y.rgb);vec3 z=HSLToRGB(vec3(xHSL.rg,yHSL.b));return vec4(mix(x.rgb,z,opacity),y.a);}"],[h.MULTIPLY,"vec4 blend(const in vec4 x,const in vec4 y,const in float opacity){return mix(x,x*y,opacity);}"],[h.NEGATION,"vec4 blend(const in vec4 x,const in vec4 y,const in float opacity){return mix(x,1.0-abs(1.0-x-y),opacity);}"],[h.NORMAL,"vec4 blend(const in vec4 x,const in vec4 y,const in float opacity){return mix(x,y,opacity);}"],[h.OVERLAY,"vec4 blend(const in vec4 x,const in vec4 y,const in float opacity){vec4 z=mix(2.0*y*x,1.0-2.0*(1.0-y)*(1.0-x),step(0.5,x));return mix(x,z,opacity);}"],[h.PIN_LIGHT,"vec4 blend(const in vec4 x,const in vec4 y,const in float opacity){vec4 y2=2.0*y;vec4 z=mix(mix(y2,x,step(0.5*x,y)),max(vec4(0.0),y2-1.0),step(x,(y2-1.0)));return mix(x,z,opacity);}"],[h.REFLECT,"vec4 blend(const in vec4 x,const in vec4 y,const in float opacity){vec4 z=mix(min(x*x/max(1.0-y,1e-12),1.0),y,step(1.0,y));return mix(x,z,opacity);}"],[h.SATURATION,"vec4 blend(const in vec4 x,const in vec4 y,const in float opacity){vec3 xHSL=RGBToHSL(x.rgb);vec3 yHSL=RGBToHSL(y.rgb);vec3 z=HSLToRGB(vec3(xHSL.r,yHSL.g,xHSL.b));return vec4(mix(x.rgb,z,opacity),y.a);}"],[h.SCREEN,"vec4 blend(const in vec4 x,const in vec4 y,const in float opacity){return mix(x,x+y-min(x*y,1.0),opacity);}"],[h.SOFT_LIGHT,"vec4 blend(const in vec4 x,const in vec4 y,const in float opacity){vec4 y2=2.0*y;vec4 w=step(0.5,y);vec4 z=mix(x-(1.0-y2)*x*(1.0-x),mix(x+(y2-1.0)*(sqrt(x)-x),x+(y2-1.0)*x*((16.0*x-12.0)*x+3.0),w*(1.0-step(0.25,x))),w);return mix(x,z,opacity);}"],[h.SRC,"vec4 blend(const in vec4 x,const in vec4 y,const in float opacity){return y;}"],[h.SUBTRACT,"vec4 blend(const in vec4 x,const in vec4 y,const in float opacity){return mix(x,max(x+y-1.0,0.0),opacity);}"],[h.VIVID_LIGHT,"vec4 blend(const in vec4 x,const in vec4 y,const in float opacity){vec4 z=mix(max(1.0-min((1.0-x)/(2.0*y),1.0),0.0),min(x/(2.0*(1.0-y)),1.0),step(0.5,y));return mix(x,z,opacity);}"]])),X=class extends d.EventDispatcher{constructor(a,b=1){super(),this._blendFunction=a,this.opacity=new d.Uniform(b)}getOpacity(){return this.opacity.value}setOpacity(a){this.opacity.value=a}get blendFunction(){return this._blendFunction}set blendFunction(a){this._blendFunction=a,this.dispatchEvent({type:"change"})}getBlendFunction(){return this.blendFunction}setBlendFunction(a){this.blendFunction=a}getShaderCode(){return W.get(this.blendFunction)}},Y=class extends d.EventDispatcher{constructor(a,b,{attributes:c=j.NONE,blendFunction:e=h.NORMAL,defines:f=new Map,uniforms:g=new Map,extensions:i=null,vertexShader:k=null}={}){super(),this.name=a,this.renderer=null,this.attributes=c,this.fragmentShader=b,this.vertexShader=k,this.defines=f,this.uniforms=g,this.extensions=i,this.blendMode=new X(e),this.blendMode.addEventListener("change",a=>this.setChanged()),this._inputColorSpace=d.LinearEncoding,this._outputColorSpace=null}get inputColorSpace(){return this._inputColorSpace}set inputColorSpace(a){this._inputColorSpace=a,this.setChanged()}get outputColorSpace(){return this._outputColorSpace}set outputColorSpace(a){this._outputColorSpace=a,this.setChanged()}getName(){return this.name}setRenderer(a){this.renderer=a}getDefines(){return this.defines}getUniforms(){return this.uniforms}getExtensions(){return this.extensions}getBlendMode(){return this.blendMode}getAttributes(){return this.attributes}setAttributes(a){this.attributes=a,this.setChanged()}getFragmentShader(){return this.fragmentShader}setFragmentShader(a){this.fragmentShader=a,this.setChanged()}getVertexShader(){return this.vertexShader}setVertexShader(a){this.vertexShader=a,this.setChanged()}setChanged(){this.dispatchEvent({type:"change"})}setDepthTexture(a,b=d.BasicDepthPacking){}update(a,b,c){}setSize(a,b){}initialize(a,b,c){}dispose(){for(let a of Object.keys(this)){let b=this[a],c=b instanceof d.WebGLRenderTarget||b instanceof d.Material||b instanceof d.Texture||b instanceof z;c&&this[a].dispose()}}},Z=class extends Y{constructor({blendFunction:a=h.SCREEN,luminanceThreshold:b=.9,luminanceSmoothing:c=.025,mipmapBlur:e=!1,intensity:f=1,radius:g=.85,levels:i=8,kernelSize:j=l.LARGE,resolutionScale:k=.5,width:m=F.AUTO_SIZE,height:n=F.AUTO_SIZE,resolutionX:o=m,resolutionY:p=n}={}){super("BloomEffect","#ifdef FRAMEBUFFER_PRECISION_HIGH\nuniform mediump sampler2D map;\n#else\nuniform lowp sampler2D map;\n#endif\nuniform float intensity;void mainImage(const in vec4 inputColor,const in vec2 uv,out vec4 outputColor){outputColor=texture2D(map,uv)*intensity;}",{blendFunction:a,uniforms:new Map([["map",new d.Uniform(null)],["intensity",new d.Uniform(f)]])}),this.renderTarget=new d.WebGLRenderTarget(1,1,{depthBuffer:!1}),this.renderTarget.texture.name="Bloom.Target",this.blurPass=new N({kernelSize:j}),this.luminancePass=new O({colorOutput:!0}),this.luminanceMaterial.threshold=b,this.luminanceMaterial.smoothing=c,this.mipmapBlurPass=new Q,this.mipmapBlurPass.enabled=e,this.mipmapBlurPass.radius=g,this.mipmapBlurPass.levels=i,this.uniforms.get("map").value=e?this.mipmapBlurPass.texture:this.renderTarget.texture;let q=this.resolution=new F(this,o,p,k);q.addEventListener("change",a=>this.setSize(q.baseWidth,q.baseHeight))}get texture(){return this.mipmapBlurPass.enabled?this.mipmapBlurPass.texture:this.renderTarget.texture}getTexture(){return this.texture}getResolution(){return this.resolution}getBlurPass(){return this.blurPass}getLuminancePass(){return this.luminancePass}get luminanceMaterial(){return this.luminancePass.fullscreenMaterial}getLuminanceMaterial(){return this.luminancePass.fullscreenMaterial}get width(){return this.resolution.width}set width(a){this.resolution.preferredWidth=a}get height(){return this.resolution.height}set height(a){this.resolution.preferredHeight=a}get dithering(){return this.blurPass.dithering}set dithering(a){this.blurPass.dithering=a}get kernelSize(){return this.blurPass.kernelSize}set kernelSize(a){this.blurPass.kernelSize=a}get distinction(){return console.warn(this.name,"distinction was removed"),1}set distinction(a){console.warn(this.name,"distinction was removed")}get intensity(){return this.uniforms.get("intensity").value}set intensity(a){this.uniforms.get("intensity").value=a}getIntensity(){return this.intensity}setIntensity(a){this.intensity=a}getResolutionScale(){return this.resolution.scale}setResolutionScale(a){this.resolution.scale=a}update(a,b,c){let d=this.renderTarget,e=this.luminancePass;e.enabled?(e.render(a,b),this.mipmapBlurPass.enabled?this.mipmapBlurPass.render(a,e.renderTarget):this.blurPass.render(a,e.renderTarget,d)):this.mipmapBlurPass.enabled?this.mipmapBlurPass.render(a,b):this.blurPass.render(a,b,d)}setSize(a,b){let c=this.resolution;c.setBaseSize(a,b),this.renderTarget.setSize(c.width,c.height),this.blurPass.resolution.copy(c),this.luminancePass.setSize(a,b),this.mipmapBlurPass.setSize(a,b)}initialize(a,b,c){this.blurPass.initialize(a,b,c),this.luminancePass.initialize(a,b,c),this.mipmapBlurPass.initialize(a,b,c),void 0!==c&&(this.renderTarget.texture.type=c,a.outputEncoding===d.sRGBEncoding&&(this.renderTarget.texture.encoding=d.sRGBEncoding))}},$=class extends Y{constructor({blendFunction:a=h.SRC,brightness:b=0,contrast:c=0}={}){super("BrightnessContrastEffect","uniform float brightness;uniform float contrast;void mainImage(const in vec4 inputColor,const in vec2 uv,out vec4 outputColor){vec3 color=inputColor.rgb+vec3(brightness-0.5);if(contrast>0.0){color/=vec3(1.0-contrast);}else{color*=vec3(1.0+contrast);}outputColor=vec4(color+vec3(0.5),inputColor.a);}",{blendFunction:a,uniforms:new Map([["brightness",new d.Uniform(b)],["contrast",new d.Uniform(c)]])}),this.inputColorSpace=d.sRGBEncoding}get brightness(){return this.uniforms.get("brightness").value}set brightness(a){this.uniforms.get("brightness").value=a}getBrightness(a){return this.brightness}setBrightness(a){this.brightness=a}get contrast(){return this.uniforms.get("contrast").value}set contrast(a){this.uniforms.get("contrast").value=a}getContrast(a){return this.contrast}setContrast(a){this.contrast=a}},_=class extends Y{constructor({blendFunction:a,bits:b=16}={}){super("ColorDepthEffect","uniform float factor;void mainImage(const in vec4 inputColor,const in vec2 uv,out vec4 outputColor){outputColor=vec4(floor(inputColor.rgb*factor+0.5)/factor,inputColor.a);}",{blendFunction:a,uniforms:new Map([["factor",new d.Uniform(1)]])}),this.bits=0,this.bitDepth=b}get bitDepth(){return this.bits}set bitDepth(a){this.bits=a,this.uniforms.get("factor").value=Math.pow(2,a/3)}getBitDepth(){return this.bitDepth}setBitDepth(a){this.bitDepth=a}},aa=class extends Y{constructor({blendFunction:a=h.SRC,inverted:b=!1}={}){super("DepthEffect","void mainImage(const in vec4 inputColor,const in vec2 uv,const in float depth,out vec4 outputColor){\n#ifdef INVERTED\nvec3 color=vec3(1.0-depth);\n#else\nvec3 color=vec3(depth);\n#endif\noutputColor=vec4(color,inputColor.a);}",{blendFunction:a,attributes:j.DEPTH}),this.inverted=b}get inverted(){return this.defines.has("INVERTED")}set inverted(a){this.inverted!==a&&(a?this.defines.set("INVERTED","1"):this.defines.delete("INVERTED"),this.setChanged())}isInverted(){return this.inverted}setInverted(a){this.inverted=a}},ab=class extends Y{constructor({blendFunction:a,angle:b=.5*Math.PI,scale:c=1}={}){super("DotScreenEffect","uniform vec2 angle;uniform float scale;float pattern(const in vec2 uv){vec2 point=scale*vec2(dot(angle.yx,vec2(uv.x,-uv.y)),dot(angle,uv));return(sin(point.x)*sin(point.y))*4.0;}void mainImage(const in vec4 inputColor,const in vec2 uv,out vec4 outputColor){vec3 color=vec3(inputColor.rgb*10.0-5.0+pattern(uv*resolution));outputColor=vec4(color,inputColor.a);}",{blendFunction:a,uniforms:new Map([["angle",new d.Uniform(new d.Vector2)],["scale",new d.Uniform(c)]])}),this.angle=b}get angle(){return Math.acos(this.uniforms.get("angle").value.y)}set angle(a){this.uniforms.get("angle").value.set(Math.sin(a),Math.cos(a))}getAngle(){return this.angle}setAngle(a){this.angle=a}get scale(){return this.uniforms.get("scale").value}set scale(a){this.uniforms.get("scale").value=a}};new d.Vector3,new d.Matrix4;var ac=class extends Y{constructor({blendFunction:a=h.SRC,hue:b=0,saturation:c=0}={}){super("HueSaturationEffect","uniform vec3 hue;uniform float saturation;void mainImage(const in vec4 inputColor,const in vec2 uv,out vec4 outputColor){vec3 color=vec3(dot(inputColor.rgb,hue.xyz),dot(inputColor.rgb,hue.zxy),dot(inputColor.rgb,hue.yzx));float average=(color.r+color.g+color.b)/3.0;vec3 diff=average-color;if(saturation>0.0){color+=diff*(1.0-1.0/(1.001-saturation));}else{color+=diff*-saturation;}outputColor=vec4(min(color,1.0),inputColor.a);}",{blendFunction:a,uniforms:new Map([["hue",new d.Uniform(new d.Vector3)],["saturation",new d.Uniform(c)]])}),this.hue=b}get saturation(){return this.uniforms.get("saturation").value}set saturation(a){this.uniforms.get("saturation").value=a}getSaturation(){return this.saturation}setSaturation(a){this.saturation=a}get hue(){let a=this.uniforms.get("hue").value;return Math.acos((3*a.x-1)/2)}set hue(a){let b=Math.sin(a),c=Math.cos(a);this.uniforms.get("hue").value.set((2*c+1)/3,(-Math.sqrt(3)*b-c+1)/3,(Math.sqrt(3)*b-c+1)/3)}getHue(){return this.hue}setHue(a){this.hue=a}};function ad(a,b,c){let d=document.createElement("canvas"),e=d.getContext("2d");if(d.width=a,d.height=b,c instanceof Image)e.drawImage(c,0,0);else{let f=e.createImageData(a,b);f.data.set(c),e.putImageData(f,0,0)}return d}var ae=class{constructor(a=0,b=0,c=null){this.width=a,this.height=b,this.data=c}toCanvas(){return"undefined"==typeof document?null:ad(this.width,this.height,this.data)}static from(a){let{width:b,height:c}=a,d;if(a instanceof Image){let e=ad(b,c,a);if(null!==e){let f=e.getContext("2d");d=f.getImageData(0,0,b,c).data}}else d=a.data;return new ae(b,c,d)}},af=new d.Color,ag=class extends null{constructor(a,b){super(a,b,b,b),this.type=FloatType5,this.format=RGBAFormat4,this.encoding=LinearEncoding4,this.minFilter=LinearFilter3,this.magFilter=LinearFilter3,this.wrapS=ClampToEdgeWrapping,this.wrapT=ClampToEdgeWrapping,this.wrapR=ClampToEdgeWrapping,this.unpackAlignment=1,this.needsUpdate=!0,this.domainMin=new Vector33(0,0,0),this.domainMax=new Vector33(1,1,1)}get isLookupTexture3D(){return!0}scaleUp(a,b=!0){let c=this.image,d;return a<=c.width?Promise.reject(Error("The target size must be greater than the current size")):new Promise((d,e)=>{let f=URL.createObjectURL(new Blob(['"use strict";(()=>{var O=Math.pow;var _={SCALE_UP:"lut.scaleup"};var k=[new Float32Array(3),new Float32Array(3)],n=[new Float32Array(3),new Float32Array(3),new Float32Array(3),new Float32Array(3)],Z=[[new Float32Array([0,0,0]),new Float32Array([1,0,0]),new Float32Array([1,1,0]),new Float32Array([1,1,1])],[new Float32Array([0,0,0]),new Float32Array([1,0,0]),new Float32Array([1,0,1]),new Float32Array([1,1,1])],[new Float32Array([0,0,0]),new Float32Array([0,0,1]),new Float32Array([1,0,1]),new Float32Array([1,1,1])],[new Float32Array([0,0,0]),new Float32Array([0,1,0]),new Float32Array([1,1,0]),new Float32Array([1,1,1])],[new Float32Array([0,0,0]),new Float32Array([0,1,0]),new Float32Array([0,1,1]),new Float32Array([1,1,1])],[new Float32Array([0,0,0]),new Float32Array([0,0,1]),new Float32Array([0,1,1]),new Float32Array([1,1,1])]];function d(a,t,r,m){let i=r[0]-t[0],e=r[1]-t[1],y=r[2]-t[2],h=a[0]-t[0],A=a[1]-t[1],w=a[2]-t[2],c=e*w-y*A,l=y*h-i*w,x=i*A-e*h,u=Math.sqrt(c*c+l*l+x*x),b=u*.5,s=c/u,F=l/u,f=x/u,p=-(a[0]*s+a[1]*F+a[2]*f),M=m[0]*s+m[1]*F+m[2]*f;return Math.abs(M+p)*b/3}function V(a,t,r,m,i,e){let y=(r+m*t+i*t*t)*4;e[0]=a[y+0],e[1]=a[y+1],e[2]=a[y+2]}function j(a,t,r,m,i,e){let y=r*(t-1),h=m*(t-1),A=i*(t-1),w=Math.floor(y),c=Math.floor(h),l=Math.floor(A),x=Math.ceil(y),u=Math.ceil(h),b=Math.ceil(A),s=y-w,F=h-c,f=A-l;if(w===y&&c===h&&l===A)V(a,t,y,h,A,e);else{let p;s>=F&&F>=f?p=Z[0]:s>=f&&f>=F?p=Z[1]:f>=s&&s>=F?p=Z[2]:F>=s&&s>=f?p=Z[3]:F>=f&&f>=s?p=Z[4]:f>=F&&F>=s&&(p=Z[5]);let[M,g,X,Y]=p,P=k[0];P[0]=s,P[1]=F,P[2]=f;let o=k[1],L=x-w,S=u-c,U=b-l;o[0]=L*M[0]+w,o[1]=S*M[1]+c,o[2]=U*M[2]+l,V(a,t,o[0],o[1],o[2],n[0]),o[0]=L*g[0]+w,o[1]=S*g[1]+c,o[2]=U*g[2]+l,V(a,t,o[0],o[1],o[2],n[1]),o[0]=L*X[0]+w,o[1]=S*X[1]+c,o[2]=U*X[2]+l,V(a,t,o[0],o[1],o[2],n[2]),o[0]=L*Y[0]+w,o[1]=S*Y[1]+c,o[2]=U*Y[2]+l,V(a,t,o[0],o[1],o[2],n[3]);let T=d(g,X,Y,P)*6,q=d(M,X,Y,P)*6,C=d(M,g,Y,P)*6,E=d(M,g,X,P)*6;n[0][0]*=T,n[0][1]*=T,n[0][2]*=T,n[1][0]*=q,n[1][1]*=q,n[1][2]*=q,n[2][0]*=C,n[2][1]*=C,n[2][2]*=C,n[3][0]*=E,n[3][1]*=E,n[3][2]*=E,e[0]=n[0][0]+n[1][0]+n[2][0]+n[3][0],e[1]=n[0][1]+n[1][1]+n[2][1]+n[3][1],e[2]=n[0][2]+n[1][2]+n[2][2]+n[3][2]}}var v=class{static expand(t,r){let m=Math.cbrt(t.length/4),i=new Float32Array(3),e=new t.constructor(O(r,3)*4),y=t instanceof Uint8Array?255:1,h=O(r,2),A=1/(r-1);for(let w=0;w<r;++w)for(let c=0;c<r;++c)for(let l=0;l<r;++l){let x=l*A,u=c*A,b=w*A,s=Math.round(l+c*r+w*h)*4;j(t,m,x,u,b,i),e[s+0]=i[0],e[s+1]=i[1],e[s+2]=i[2],e[s+3]=y}return e}};self.addEventListener("message",a=>{let t=a.data,r=t.data;switch(t.operation){case _.SCALE_UP:r=v.expand(r,t.size);break}postMessage(r,[r.buffer]),close()});})();\n'],{type:"text/javascript"})),g=new Worker(f);g.addEventListener("error",a=>e(a.error)),g.addEventListener("message",b=>{let c=new ag(b.data,a);c.encoding=this.encoding,c.type=this.type,c.name=this.name,URL.revokeObjectURL(f),d(c)});let h=b?[c.data.buffer]:[];g.postMessage({operation:m.SCALE_UP,data:c.data,size:a},h)})}applyLUT(a){let b=this.image,c=a.image,d=Math.min(b.width,b.height,b.depth),e=Math.min(c.width,c.height,c.depth);if(d!==e)console.error("Size mismatch");else if(a.type!==FloatType5||this.type!==FloatType5)console.error("Both LUTs must be FloatType textures");else if(a.format!==RGBAFormat4||this.format!==RGBAFormat4)console.error("Both LUTs must be RGBA textures");else{let f=b.data,g=c.data,h=d,i=h**2,j=h-1;for(let k=0,l=h**3;k<l;++k){let m=4*k,n=f[m+0]*j,o=f[m+1]*j,p=f[m+2]*j,q=4*Math.round(n+o*h+p*i);f[m+0]=g[q+0],f[m+1]=g[q+1],f[m+2]=g[q+2]}this.needsUpdate=!0}return this}convertToUint8(){if(this.type===FloatType5){let a=this.image.data,b=new Uint8Array(a.length);for(let c=0,d=a.length;c<d;++c)b[c]=255*a[c]+.5;this.image.data=b,this.type=UnsignedByteType14,this.needsUpdate=!0}return this}convertToFloat(){if(this.type===UnsignedByteType14){let a=this.image.data,b=new Float32Array(a.length);for(let c=0,d=a.length;c<d;++c)b[c]=a[c]/255;this.image.data=b,this.type=FloatType5,this.needsUpdate=!0}return this}convertToRGBA(){return console.warn("LookupTexture","convertToRGBA() is deprecated, LUTs are now RGBA by default"),this}convertLinearToSRGB(){let a=this.image.data;if(this.type===FloatType5){for(let b=0,c=a.length;b<c;b+=4)af.fromArray(a,b).convertLinearToSRGB().toArray(a,b);this.encoding=sRGBEncoding12,this.needsUpdate=!0}else console.error("Color space conversion requires FloatType data");return this}convertSRGBToLinear(){let a=this.image.data;if(this.type===FloatType5){for(let b=0,c=a.length;b<c;b+=4)af.fromArray(a,b).convertSRGBToLinear().toArray(a,b);this.encoding=LinearEncoding4,this.needsUpdate=!0}else console.error("Color space conversion requires FloatType data");return this}toDataTexture(){let a=this.image.width,b=this.image.height*this.image.depth,c=new DataTexture2(this.image.data,a,b);return c.name=this.name,c.type=this.type,c.format=this.format,c.encoding=this.encoding,c.minFilter=LinearFilter3,c.magFilter=LinearFilter3,c.wrapS=this.wrapS,c.wrapT=this.wrapT,c.generateMipmaps=!1,c.needsUpdate=!0,c}static from(a){let b=a.image,{width:c,height:d}=b,e=Math.min(c,d),f;if(b instanceof Image){let g=ae.from(b),h=g.data;if(c>d){f=new Uint8Array(h.length);for(let i=0;i<e;++i)for(let j=0;j<e;++j)for(let k=0;k<e;++k){let l=(k+i*e+j*e*e)*4,m=(k+j*e+i*e*e)*4;f[m+0]=h[l+0],f[m+1]=h[l+1],f[m+2]=h[l+2],f[m+3]=h[l+3]}}else f=new Uint8Array(h.buffer)}else f=b.data.slice();let n=new ag(f,e);return n.encoding=a.encoding,n.type=a.type,n.name=a.name,n}static createNeutral(a){let b=new Float32Array(a**3*4),c=a**2,d=1/(a-1);for(let e=0;e<a;++e)for(let f=0;f<a;++f)for(let g=0;g<a;++g){let h=(e+f*a+g*c)*4;b[h+0]=e*d,b[h+1]=f*d,b[h+2]=g*d,b[h+3]=1}let i=new ag(b,a);return i.name="neutral",i}},ah=[new Float32Array(3),new Float32Array(3)],ai=[new Float32Array(3),new Float32Array(3),new Float32Array(3),new Float32Array(3)],aj=[[new Float32Array([0,0,0]),new Float32Array([1,0,0]),new Float32Array([1,1,0]),new Float32Array([1,1,1])],[new Float32Array([0,0,0]),new Float32Array([1,0,0]),new Float32Array([1,0,1]),new Float32Array([1,1,1])],[new Float32Array([0,0,0]),new Float32Array([0,0,1]),new Float32Array([1,0,1]),new Float32Array([1,1,1])],[new Float32Array([0,0,0]),new Float32Array([0,1,0]),new Float32Array([1,1,0]),new Float32Array([1,1,1])],[new Float32Array([0,0,0]),new Float32Array([0,1,0]),new Float32Array([0,1,1]),new Float32Array([1,1,1])],[new Float32Array([0,0,0]),new Float32Array([0,0,1]),new Float32Array([0,1,1]),new Float32Array([1,1,1])]];function ak(a,b,c,d){let e=c[0]-b[0],f=c[1]-b[1],g=c[2]-b[2],h=a[0]-b[0],i=a[1]-b[1],j=a[2]-b[2],k=f*j-g*i,l=g*h-e*j,m=e*i-f*h,n=Math.sqrt(k*k+l*l+m*m),o=k/n,p=l/n,q=m/n,r=-(a[0]*o+a[1]*p+a[2]*q),s=d[0]*o+d[1]*p+d[2]*q;return Math.abs(s+r)*(.5*n)/3}function al(a,b,c,d,e,f){let g=(c+d*b+e*b*b)*4;f[0]=a[g+0],f[1]=a[g+1],f[2]=a[g+2]}var am=[new Float32Array(2),new Float32Array(2)],an=(new Float32Array([0,-.25,.25,-.125,.125,-.375,.375]),new Float32Array([0,0]),new Float32Array([.25,-.25]),new Float32Array([-.25,.25]),new Float32Array([.125,-.125]),new Float32Array([-.125,.125]),new Uint8Array([0,0]),new Uint8Array([3,0]),new Uint8Array([0,3]),new Uint8Array([3,3]),new Uint8Array([1,0]),new Uint8Array([4,0]),new Uint8Array([1,3]),new Uint8Array([4,3]),new Uint8Array([0,1]),new Uint8Array([3,1]),new Uint8Array([0,4]),new Uint8Array([3,4]),new Uint8Array([1,1]),new Uint8Array([4,1]),new Uint8Array([1,4]),new Uint8Array([4,4]),[new Uint8Array([0,0]),new Uint8Array([1,0]),new Uint8Array([0,2]),new Uint8Array([1,2]),new Uint8Array([2,0]),new Uint8Array([3,0]),new Uint8Array([2,2]),new Uint8Array([3,2]),new Uint8Array([0,1]),new Uint8Array([1,1]),new Uint8Array([0,3]),new Uint8Array([1,3]),new Uint8Array([2,1]),new Uint8Array([3,1]),new Uint8Array([2,3]),new Uint8Array([3,3])]);function ao(a){var b,c,d,e,f,g,h,i,j,k,l,m,n;let o=am[0],p=am[1],q=.5*Math.sqrt(2*o[0]),r=.5*Math.sqrt(2*o[1]),s=.5*Math.sqrt(2*p[0]),t=.5*Math.sqrt(2*p[1]),u=Math.min(Math.max(b=a/32,0),1);o[0]=(c=q,d=o[0],c+(d-c)*(e=u)),o[1]=(f=r,g=o[1],f+(g-f)*(h=u)),p[0]=(i=s,j=p[0],i+(j-i)*(k=u)),p[1]=(l=t,m=p[1],l+(m-l)*(n=u))}function ap(a,b,c,d,e,f){let g=c-a,h=d-b,i=e,j=e+1,k=b+h*(i-a)/g,l=b+h*(j-a)/g;if(i>=a&&i<c||j>a&&j<=c){if(Math.sign(k)===Math.sign(l)||1e-4>Math.abs(k)||1e-4>Math.abs(l)){let m=(k+l)/2;m<0?(f[0]=Math.abs(m),f[1]=0):(f[0]=0,f[1]=Math.abs(m))}else{let n=-b*g/h+a,o=Math.trunc(n),p=n>a?k*(n-o)/2:0,q=n<c?l*(1-(n-o))/2:0,r=Math.abs(p)>Math.abs(q)?p:-q;r<0?(f[0]=Math.abs(p),f[1]=Math.abs(q)):(f[0]=Math.abs(q),f[1]=Math.abs(p))}}else f[0]=0,f[1]=0;return f}function aq(a,b,c,d,e){let f=am[0],g=am[1],h=.5+d,i=.5+d-1,j=b+c+1;switch(a){case 0:case 5:case 10:case 15:e[0]=0,e[1]=0;break;case 1:b<=c?ap(0,i,j/2,0,b,e):(e[0]=0,e[1]=0);break;case 2:b>=c?ap(j/2,0,j,i,b,e):(e[0]=0,e[1]=0);break;case 3:ap(0,i,j/2,0,b,f),ap(j/2,0,j,i,b,g),ao(j,am),e[0]=f[0]+g[0],e[1]=f[1]+g[1];break;case 4:b<=c?ap(0,h,j/2,0,b,e):(e[0]=0,e[1]=0);break;case 6:Math.abs(d)>0?(ap(0,h,j,i,b,f),ap(0,h,j/2,0,b,g),ap(j/2,0,j,i,b,e),g[0]=g[0]+e[0],g[1]=g[1]+e[1],e[0]=(f[0]+g[0])/2,e[1]=(f[1]+g[1])/2):ap(0,h,j,i,b,e);break;case 7:case 14:ap(0,h,j,i,b,e);break;case 8:b>=c?ap(j/2,0,j,h,b,e):(e[0]=0,e[1]=0);break;case 9:Math.abs(d)>0?(ap(0,i,j,h,b,f),ap(0,i,j/2,0,b,g),ap(j/2,0,j,h,b,e),g[0]=g[0]+e[0],g[1]=g[1]+e[1],e[0]=(f[0]+g[0])/2,e[1]=(f[1]+g[1])/2):ap(0,i,j,h,b,e);break;case 11:case 13:ap(0,i,j,h,b,e);break;case 12:ap(0,h,j/2,0,b,f),ap(j/2,0,j,h,b,g),ao(j,am),e[0]=f[0]+g[0],e[1]=f[1]+g[1]}return e}function ar(a,b,c,d,e,f){let g=a===c&&b===d;if(!g){let h=(a+c)/2,i=(b+d)/2,j=d-b,k=a-c,l=j*(e-h)+k*(f-i);g=l>0}return g}function as(a,b,c,d,e,f){let g=0;for(let h=0;h<30;++h)for(let i=0;i<30;++i){let j=i/29,k=h/29;ar(a,b,c,d,e+j,f+k)&& ++g}return g/900}function at(a,b,c,d,e,f,g,h){let i=an[a],j=i[0],k=i[1];return j>0&&(b+=g[0],c+=g[1]),k>0&&(d+=g[0],e+=g[1]),h[0]=1-as(b,c,d,e,1+f,0+f),h[1]=as(b,c,d,e,1+f,1+f),h}function au(a,b,c,d,e){let f=am[0],g=am[1],h=b+c+1;switch(a){case 0:case 15:at(a,1,1,1+h,1+h,b,d,f),at(a,1,0,1+h,0+h,b,d,g),e[0]=(f[0]+g[0])/2,e[1]=(f[1]+g[1])/2;break;case 1:at(a,1,0,0+h,0+h,b,d,f),at(a,1,0,1+h,0+h,b,d,g),e[0]=(f[0]+g[0])/2,e[1]=(f[1]+g[1])/2;break;case 2:at(a,0,0,1+h,0+h,b,d,f),at(a,1,0,1+h,0+h,b,d,g),e[0]=(f[0]+g[0])/2,e[1]=(f[1]+g[1])/2;break;case 3:at(a,1,0,1+h,0+h,b,d,e);break;case 4:at(a,1,1,0+h,0+h,b,d,f),at(a,1,1,1+h,0+h,b,d,g),e[0]=(f[0]+g[0])/2,e[1]=(f[1]+g[1])/2;break;case 5:at(a,1,1,0+h,0+h,b,d,f),at(a,1,0,1+h,0+h,b,d,g),e[0]=(f[0]+g[0])/2,e[1]=(f[1]+g[1])/2;break;case 6:at(a,1,1,1+h,0+h,b,d,e);break;case 7:at(a,1,1,1+h,0+h,b,d,f),at(a,1,0,1+h,0+h,b,d,g),e[0]=(f[0]+g[0])/2,e[1]=(f[1]+g[1])/2;break;case 8:at(a,0,0,1+h,1+h,b,d,f),at(a,1,0,1+h,1+h,b,d,g),e[0]=(f[0]+g[0])/2,e[1]=(f[1]+g[1])/2;break;case 9:at(a,1,0,1+h,1+h,b,d,e),at(a,1,0,1+h,1+h,b,d,e);break;case 10:at(a,0,0,1+h,1+h,b,d,f),at(a,1,0,1+h,0+h,b,d,g),e[0]=(f[0]+g[0])/2,e[1]=(f[1]+g[1])/2;break;case 11:at(a,1,0,1+h,1+h,b,d,f),at(a,1,0,1+h,0+h,b,d,g),e[0]=(f[0]+g[0])/2,e[1]=(f[1]+g[1])/2;break;case 12:at(a,1,1,1+h,1+h,b,d,e);break;case 13:at(a,1,1,1+h,1+h,b,d,f),at(a,1,0,1+h,1+h,b,d,g),e[0]=(f[0]+g[0])/2,e[1]=(f[1]+g[1])/2;break;case 14:at(a,1,1,1+h,1+h,b,d,f),at(a,1,1,1+h,0+h,b,d,g),e[0]=(f[0]+g[0])/2,e[1]=(f[1]+g[1])/2}return e}av(0,0,0,0),new Float32Array([0,0,0,0]),av(0,0,0,1),new Float32Array([0,0,0,1]),av(0,0,1,0),new Float32Array([0,0,1,0]),av(0,0,1,1),new Float32Array([0,0,1,1]),av(0,1,0,0),new Float32Array([0,1,0,0]),av(0,1,0,1),new Float32Array([0,1,0,1]),av(0,1,1,0),new Float32Array([0,1,1,0]),av(0,1,1,1),new Float32Array([0,1,1,1]),av(1,0,0,0),new Float32Array([1,0,0,0]),av(1,0,0,1),new Float32Array([1,0,0,1]),av(1,0,1,0),new Float32Array([1,0,1,0]),av(1,0,1,1),new Float32Array([1,0,1,1]),av(1,1,0,0),new Float32Array([1,1,0,0]),av(1,1,0,1),new Float32Array([1,1,0,1]),av(1,1,1,0),new Float32Array([1,1,1,0]),av(1,1,1,1),new Float32Array([1,1,1,1]);function av(a,b,c,d){var e,f,g,h,i,j,k,l,m;let n=(e=a,e+((f=b)-e)*.75),o=(h=c,h+((i=d)-h)*.75);return k=n,k+((l=o)-k)*.875}var aw=class extends Y{constructor({blendFunction:a=h.SCREEN,premultiply:b=!1}={}){super("NoiseEffect","void mainImage(const in vec4 inputColor,const in vec2 uv,out vec4 outputColor){vec3 noise=vec3(rand(uv*time));\n#ifdef PREMULTIPLY\noutputColor=vec4(min(inputColor.rgb*noise,vec3(1.0)),inputColor.a);\n#else\noutputColor=vec4(noise,inputColor.a);\n#endif\n}",{blendFunction:a}),this.premultiply=b}get premultiply(){return this.defines.has("PREMULTIPLY")}set premultiply(a){this.premultiply!==a&&(a?this.defines.set("PREMULTIPLY","1"):this.defines.delete("PREMULTIPLY"),this.setChanged())}isPremultiplied(){return this.premultiply}setPremultiplied(a){this.premultiply=a}},ax=class extends Y{constructor({blendFunction:a=h.OVERLAY,density:b=1.25,scrollSpeed:c=0}={}){super("ScanlineEffect","uniform float count;\n#ifdef SCROLL\nuniform float scrollSpeed;\n#endif\nvoid mainImage(const in vec4 inputColor,const in vec2 uv,out vec4 outputColor){float y=uv.y;\n#ifdef SCROLL\ny+=time*scrollSpeed;\n#endif\nvec2 sl=vec2(sin(y*count),cos(y*count));outputColor=vec4(sl.xyx,inputColor.a);}",{blendFunction:a,uniforms:new Map([["count",new d.Uniform(0)],["scrollSpeed",new d.Uniform(0)]])}),this.resolution=new d.Vector2,this.d=b,this.scrollSpeed=c}get density(){return this.d}set density(a){this.d=a,this.setSize(this.resolution.width,this.resolution.height)}getDensity(){return this.density}setDensity(a){this.density=a}get scrollSpeed(){return this.uniforms.get("scrollSpeed").value}set scrollSpeed(a){this.uniforms.get("scrollSpeed").value=a,0===a?this.defines.delete("SCROLL")&&this.setChanged():this.defines.has("SCROLL")||(this.defines.set("SCROLL","1"),this.setChanged())}setSize(a,b){this.resolution.set(a,b),this.uniforms.get("count").value=Math.round(b*this.density)}},ay=.5*Math.PI,az=new d.Vector3,aA=new d.Vector3,aB=class extends Y{constructor(a,b=new d.Vector3,{speed:c=2,maxRadius:e=1,waveSize:f=.2,amplitude:g=.05}={}){super("ShockWaveEffect","uniform bool active;uniform vec2 center;uniform float waveSize;uniform float radius;uniform float maxRadius;uniform float amplitude;varying float vSize;void mainUv(inout vec2 uv){if(active){vec2 aspectCorrection=vec2(aspect,1.0);vec2 difference=uv*aspectCorrection-center*aspectCorrection;float distance=sqrt(dot(difference,difference))*vSize;if(distance>radius){if(distance<radius+waveSize){float angle=(distance-radius)*PI2/waveSize;float cosSin=(1.0-cos(angle))*0.5;float extent=maxRadius+waveSize;float decay=max(extent-distance*distance,0.0)/extent;uv-=((cosSin*amplitude*difference)/distance)*decay;}}}}",{vertexShader:"uniform float size;uniform float cameraDistance;varying float vSize;void mainSupport(){vSize=(0.1*cameraDistance)/size;}",uniforms:new Map([["active",new d.Uniform(!1)],["center",new d.Uniform(new d.Vector2(.5,.5))],["cameraDistance",new d.Uniform(1)],["size",new d.Uniform(1)],["radius",new d.Uniform(-f)],["maxRadius",new d.Uniform(e)],["waveSize",new d.Uniform(f)],["amplitude",new d.Uniform(g)]])}),this.position=b,this.speed=c,this.camera=a,this.screenPosition=this.uniforms.get("center").value,this.time=0,this.active=!1}get amplitude(){return this.uniforms.get("amplitude").value}set amplitude(a){this.uniforms.get("amplitude").value=a}get waveSize(){return this.uniforms.get("waveSize").value}set waveSize(a){this.uniforms.get("waveSize").value=a}get maxRadius(){return this.uniforms.get("maxRadius").value}set maxRadius(a){this.uniforms.get("maxRadius").value=a}get epicenter(){return this.position}set epicenter(a){this.position=a}getPosition(){return this.position}setPosition(a){this.position=a}getSpeed(){return this.speed}setSpeed(a){this.speed=a}explode(){this.time=0,this.active=!0,this.uniforms.get("active").value=!0}update(a,b,c){let d=this.position,e=this.camera,f=this.uniforms,g=f.get("active");if(this.active){let h=f.get("waveSize").value;e.getWorldDirection(az),aA.copy(e.position).sub(d),g.value=az.angleTo(aA)>ay,g.value&&(f.get("cameraDistance").value=e.position.distanceTo(d),az.copy(d).project(e),this.screenPosition.set((az.x+1)*.5,(az.y+1)*.5)),this.time+=c*this.speed;let i=this.time-h;f.get("radius").value=i,i>=(f.get("maxRadius").value+h)*2&&(this.active=!1,g.value=!1)}}},aC=class extends Y{constructor({blendFunction:a,intensity:b=1}={}){super("SepiaEffect","uniform vec3 weightsR;uniform vec3 weightsG;uniform vec3 weightsB;void mainImage(const in vec4 inputColor,const in vec2 uv,out vec4 outputColor){vec3 color=vec3(dot(inputColor.rgb,weightsR),dot(inputColor.rgb,weightsG),dot(inputColor.rgb,weightsB));outputColor=vec4(color,inputColor.a);}",{blendFunction:a,uniforms:new Map([["weightsR",new d.Uniform(new d.Vector3(.393,.769,.189))],["weightsG",new d.Uniform(new d.Vector3(.349,.686,.168))],["weightsB",new d.Uniform(new d.Vector3(.272,.534,.131))]])})}get intensity(){return this.blendMode.opacity.value}set intensity(a){this.blendMode.opacity.value=a}getIntensity(){return this.intensity}setIntensity(a){this.intensity=a}get weightsR(){return this.uniforms.get("weightsR").value}get weightsG(){return this.uniforms.get("weightsG").value}get weightsB(){return this.uniforms.get("weightsB").value}},aD=class extends Y{constructor({blendFunction:a=h.SRC,adaptive:b=!0,mode:c=b?n.REINHARD2_ADAPTIVE:n.REINHARD2,resolution:e=256,maxLuminance:f=16,whitePoint:g=f,middleGrey:i=.6,minLuminance:j=.01,averageLuminance:k=1,adaptationRate:l=1}={}){super("ToneMappingEffect","#include <tonemapping_pars_fragment>\n#if THREE_REVISION < 143\n#define luminance(v) linearToRelativeLuminance(v)\n#endif\nuniform lowp sampler2D luminanceBuffer;uniform float whitePoint;uniform float middleGrey;\n#if TONE_MAPPING_MODE != 2\nuniform float averageLuminance;\n#endif\nvec3 Reinhard2ToneMapping(vec3 color){color*=toneMappingExposure;float l=luminance(color);\n#if TONE_MAPPING_MODE == 2\nfloat lumAvg=unpackRGBAToFloat(texture2D(luminanceBuffer,vec2(0.5)));\n#else\nfloat lumAvg=averageLuminance;\n#endif\nfloat lumScaled=(l*middleGrey)/max(lumAvg,1e-6);float lumCompressed=lumScaled*(1.0+lumScaled/(whitePoint*whitePoint));lumCompressed/=(1.0+lumScaled);return clamp(lumCompressed*color,0.0,1.0);}void mainImage(const in vec4 inputColor,const in vec2 uv,out vec4 outputColor){\n#if TONE_MAPPING_MODE == 1 || TONE_MAPPING_MODE == 2\noutputColor=vec4(Reinhard2ToneMapping(inputColor.rgb),inputColor.a);\n#else\noutputColor=vec4(toneMapping(inputColor.rgb),inputColor.a);\n#endif\n}",{blendFunction:a,uniforms:new Map([["luminanceBuffer",new d.Uniform(null)],["maxLuminance",new d.Uniform(f)],["whitePoint",new d.Uniform(g)],["middleGrey",new d.Uniform(i)],["averageLuminance",new d.Uniform(k)]])}),this.renderTargetLuminance=new d.WebGLRenderTarget(1,1,{minFilter:d.LinearMipmapLinearFilter,depthBuffer:!1}),this.renderTargetLuminance.texture.generateMipmaps=!0,this.renderTargetLuminance.texture.name="Luminance",this.luminancePass=new O({renderTarget:this.renderTargetLuminance}),this.adaptiveLuminancePass=new B(this.luminancePass.texture,{minLuminance:j,adaptationRate:l}),this.uniforms.get("luminanceBuffer").value=this.adaptiveLuminancePass.texture,this.resolution=e,this.mode=c}get mode(){return Number(this.defines.get("TONE_MAPPING_MODE"))}set mode(a){if(this.mode!==a){switch(this.defines.clear(),this.defines.set("TONE_MAPPING_MODE",a.toFixed(0)),a){case n.REINHARD:this.defines.set("toneMapping(texel)","ReinhardToneMapping(texel)");break;case n.OPTIMIZED_CINEON:this.defines.set("toneMapping(texel)","OptimizedCineonToneMapping(texel)");break;case n.ACES_FILMIC:this.defines.set("toneMapping(texel)","ACESFilmicToneMapping(texel)");break;default:this.defines.set("toneMapping(texel)","texel")}this.adaptiveLuminancePass.enabled=a===n.REINHARD2_ADAPTIVE,this.setChanged()}}getMode(){return this.mode}setMode(a){this.mode=a}get whitePoint(){return this.uniforms.get("whitePoint").value}set whitePoint(a){this.uniforms.get("whitePoint").value=a}get middleGrey(){return this.uniforms.get("middleGrey").value}set middleGrey(a){this.uniforms.get("middleGrey").value=a}get averageLuminance(){return this.uniforms.get("averageLuminance").value}set averageLuminance(a){this.uniforms.get("averageLuminance").value=a}get adaptiveLuminanceMaterial(){return this.adaptiveLuminancePass.fullscreenMaterial}getAdaptiveLuminanceMaterial(){return this.adaptiveLuminanceMaterial}get resolution(){return this.luminancePass.resolution.width}set resolution(a){let b=Math.max(0,Math.ceil(Math.log2(a))),c=Math.pow(2,b);this.luminancePass.resolution.setPreferredSize(c,c),this.adaptiveLuminanceMaterial.mipLevel1x1=b}getResolution(){return this.resolution}setResolution(a){this.resolution=a}get adaptive(){return this.mode===n.REINHARD2_ADAPTIVE}set adaptive(a){this.mode=a?n.REINHARD2_ADAPTIVE:n.REINHARD2}get adaptationRate(){return this.adaptiveLuminanceMaterial.adaptationRate}set adaptationRate(a){this.adaptiveLuminanceMaterial.adaptationRate=a}get distinction(){return console.warn(this.name,"distinction was removed."),1}set distinction(a){console.warn(this.name,"distinction was removed.")}update(a,b,c){this.adaptiveLuminancePass.enabled&&(this.luminancePass.render(a,b),this.adaptiveLuminancePass.render(a,null,null,c))}initialize(a,b,c){this.adaptiveLuminancePass.initialize(a,b,c)}},aE=class extends Y{constructor({blendFunction:a,technique:b=o.DEFAULT,eskil:c=!1,offset:e=.5,darkness:f=.5}={}){super("VignetteEffect","uniform float offset;uniform float darkness;void mainImage(const in vec4 inputColor,const in vec2 uv,out vec4 outputColor){const vec2 center=vec2(0.5);vec3 color=inputColor.rgb;\n#if VIGNETTE_TECHNIQUE == 0\nfloat d=distance(uv,center);color*=smoothstep(0.8,offset*0.799,d*(darkness+offset));\n#else\nvec2 coord=(uv-center)*vec2(offset);color=mix(color,vec3(1.0-darkness),dot(coord,coord));\n#endif\noutputColor=vec4(color,inputColor.a);}",{blendFunction:a,defines:new Map([["VIGNETTE_TECHNIQUE",b.toFixed(0)]]),uniforms:new Map([["offset",new d.Uniform(e)],["darkness",new d.Uniform(f)]])})}get technique(){return Number(this.defines.get("VIGNETTE_TECHNIQUE"))}set technique(a){this.technique!==a&&(this.defines.set("VIGNETTE_TECHNIQUE",a.toFixed(0)),this.setChanged())}get eskil(){return this.technique===o.ESKIL}set eskil(a){this.technique=a?o.ESKIL:o.DEFAULT}getTechnique(){return this.technique}setTechnique(a){this.technique=a}get offset(){return this.uniforms.get("offset").value}set offset(a){this.uniforms.get("offset").value=a}getOffset(){return this.offset}setOffset(a){this.offset=a}get darkness(){return this.uniforms.get("darkness").value}set darkness(a){this.uniforms.get("darkness").value=a}getDarkness(){return this.darkness}setDarkness(a){this.darkness=a}}}}])